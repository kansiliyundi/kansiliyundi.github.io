{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-icon.png","path":"images/apple-icon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16.png","path":"images/favicon-16x16.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32.png","path":"images/favicon-32x32.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/my_avatar.png","path":"images/my_avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechatpay.jpg","path":"images/wechatpay.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/images/归档.zip","path":"images/归档.zip","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1508384288380},{"_id":"source/.DS_Store","hash":"1b17df00b9231da31022fc5df01073be994c2b42","modified":1508391951737},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1508384288385},{"_id":"themes/next/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1508410190267},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1508384288381},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1508384288385},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1508384288385},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1508384288385},{"_id":"themes/next/_config.yml","hash":"3b12fb3adb0aada810c9f85296132849ef1c4cdd","modified":1508410363633},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1508384288385},{"_id":"themes/next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1508384288387},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1508384288387},{"_id":"themes/next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1508384288414},{"_id":"themes/next/package-lock.json","hash":"12a3557021ecf4570f4ae6f6ce603177a2d1044e","modified":1508384288413},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1508397583791},{"_id":"source/_posts/git不提交空文件夹结构解决办法.md","hash":"d71cc7cbdba96dcad964acd0cd38327790f264d9","modified":1508409863436},{"_id":"source/_posts/CentOS-Hexo-Git搭建静态博客.md","hash":"2ae27fe02dd74efb75efa1930113cdb2b37381e0","modified":1508409863436},{"_id":"source/_posts/ubantu一键换内核并安装锐速脚本.md","hash":"da3783ba5d6946622d890c50327c6da6f470dd75","modified":1508409863436},{"_id":"source/_posts/移动端工程结构总结.md","hash":"76e0b1399c6a4bd833c66f24312d1855568ab649","modified":1508409863437},{"_id":"source/_posts/程序员必备的翻墙姿势.md","hash":"d981cdf902b0df3ca5fb02b1ce18207252731b2b","modified":1508409863437},{"_id":"source/_posts/给centOS安装锐速.md","hash":"7867bf1697fd7567dbd45e0a841d79565b95782a","modified":1508409863437},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1508384288387},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1508384288387},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1508384288388},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1508384288388},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1508384288388},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1508384288389},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1508384288389},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1508384288390},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1508384288390},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1508384288390},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1508384288390},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1508384288391},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1508384288391},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1508384288391},{"_id":"themes/next/layout/_layout.swig","hash":"26bd9be87576eaab53aaf178b5ddd84d8bb4cabf","modified":1508384288392},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1508384288411},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1508384288411},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1508384288411},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1508384288412},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1508384288412},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1508384288412},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1508384288412},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1508384288414},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1508384288414},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1508384288525},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1508384288525},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1508384288526},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1508384288449},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1508384288392},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1508384288392},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1508384288392},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1508384288392},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9efc455894921a66bbc074055d3b39c8a34a48a4","modified":1508384288394},{"_id":"themes/next/layout/_macro/post.swig","hash":"7a64914a0a3c893c1aaa8b5349b85898f95af314","modified":1508384288393},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1508384288393},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1508384288394},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1508384288394},{"_id":"themes/next/layout/_partials/comments.swig","hash":"044bc872d7b59655e46f6fb1cf14f767e31a4dfa","modified":1508384288394},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1508384288395},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1508384288396},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1508384288396},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1508384288396},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1508384288397},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1508384288399},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1508384288399},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1508384288401},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1508384288407},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1508384288408},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1508384288407},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1508384288407},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1508384288408},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1508384288408},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1508384288409},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1508384288415},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1508384288415},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1508384288415},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1508384288416},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1508384288416},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1508384288416},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1508384288416},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1508384288417},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1508384288417},{"_id":"themes/next/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1508405822553},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1508384288449},{"_id":"themes/next/source/images/alipay.jpg","hash":"4ec55e32056cb74dff733f62d9525fe161bfe875","modified":1508397009318},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1508384288449},{"_id":"themes/next/source/images/apple-icon.png","hash":"36673b348e9ccdb3095d7b4ddab25f0053d42672","modified":1508407956000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1508384288450},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1508384288450},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1508384288450},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1508384288451},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1508384288451},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1508384288451},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1508384288452},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1508384288452},{"_id":"themes/next/source/images/favicon-16x16.png","hash":"0a749e7a908da741d54171cce160ce380c01678a","modified":1508407750000},{"_id":"themes/next/source/images/favicon-32x32.png","hash":"a8dbd071428a731aa0ea8490a8f5cd596569c048","modified":1508407787000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1508384288453},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1508384288454},{"_id":"themes/next/source/images/my_avatar.png","hash":"090da430f430287df7fc16c5acb4dc8715cafcca","modified":1508409104130},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1508384288454},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1508384288455},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1508384288455},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1508384288455},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1508384288400},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1508384288400},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1508384288438},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1508384288438},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1508384288439},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1508384288448},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1508384288449},{"_id":"themes/next/source/images/wechatpay.jpg","hash":"e05396f9ca1f9c53c8b791255a24df39b0332e8c","modified":1508396912264},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1508384288395},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1508384288395},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1508384288397},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1508384288397},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1508384288398},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1508384288398},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1508384288398},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1508384288398},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1508384288399},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1508384288400},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1508384288400},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1508384288401},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1508384288401},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1508384288402},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1508384288402},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1508384288402},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1508384288402},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1508384288403},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1508384288403},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1508384288403},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1508384288403},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1508384288404},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1508384288404},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1508384288404},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1508384288405},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1508384288405},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1508384288405},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1508384288405},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1508384288406},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1508384288406},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1508384288406},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"04941c42e4e4339ae6786dfb969d348c72979872","modified":1508384288406},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1508384288407},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1508384288410},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1508384288410},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1508384288410},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1508384288410},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1508384288438},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1508384288438},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1508384288439},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1508384288439},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1508384288447},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1508384288448},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1508384288448},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1508384288448},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1508384288456},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1508384288457},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1508384288457},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1508384288457},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1508384288458},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1508384288460},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1508384288459},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1508384288458},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1508384288459},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1508384288461},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1508384288470},{"_id":"themes/next/source/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1508384288461},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1508384288476},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1508384288474},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1508384288476},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1508384288485},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1508384288476},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1508384288485},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1508384288486},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1508384288486},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1508384288486},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1508384288483},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1508384288484},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1508384288484},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1508384288483},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1508384288505},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1508384288506},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1508384288506},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1508384288507},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1508384288507},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1508384288509},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1508384288507},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1508384288507},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1508384288509},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1508384288510},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1508384288510},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1508384288509},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1508384288510},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1508384288511},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1508384288511},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1508384288511},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1508384288511},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1508384288512},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1508384288512},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1508384288512},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1508384288512},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1508384288514},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1508384288513},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1508384288515},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1508384288514},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1508384288513},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1508384288513},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1508384288524},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1508384288524},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1508384288521},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1508384288521},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1508384288525},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1508384288505},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1508384288409},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1508384288409},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1508384288418},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1508384288418},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1508384288418},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1508384288418},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1508384288419},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1508384288423},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1508384288430},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1508384288436},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1508384288437},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1508384288436},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1508384288437},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1508384288437},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1508384288438},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1508384288437},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1508384288439},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1508384288440},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1508384288440},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1508384288440},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1508384288441},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1508384288441},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1508384288442},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1508384288441},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1508384288443},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1508384288443},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1508384288443},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1508384288443},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1508384288444},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1508384288444},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1508384288444},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1508384288445},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1508384288445},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"bcf52192942c0afc410c74a0fb458e7936ddc3d5","modified":1508384288446},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1508384288446},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1508384288460},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1508384288465},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1508384288469},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1508384288469},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1508384288477},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1508384288478},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1508384288478},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1508384288482},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1508384288478},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1508384288478},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1508384288481},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1508384288482},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1508384288477},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1508384288487},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1508384288487},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1508384288488},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1508384288484},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1508384288485},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1508384288520},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1508384288520},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1508384288466},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1508384288504},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1508384288503},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1508384288523},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1508384288419},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1508384288419},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1508384288420},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1508384288420},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1508384288420},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1508384288420},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1508384288421},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1508384288421},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1508384288421},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1508384288422},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1508384288422},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1508384288422},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1508384288423},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1508384288423},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1508384288424},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1508384288424},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1508384288424},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1508384288424},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1508384288425},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1508384288425},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1508384288425},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1508384288425},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1508384288426},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1508384288426},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1508384288427},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1508384288426},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1508384288427},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1508384288427},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1508384288427},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1508384288428},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1508384288428},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1508384288428},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1508384288428},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1508384288429},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1508384288429},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1508384288429},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1508384288429},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1508384288430},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1508384288430},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1508384288431},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1508384288431},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1508384288431},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1508384288431},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1508384288432},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1508384288432},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1508384288432},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1508384288433},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1508384288432},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1508384288433},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1508384288433},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1508384288433},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1508384288434},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1508384288434},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1508384288435},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1508384288434},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1508384288435},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1508384288435},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1508384288435},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1508384288442},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1508384288442},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1508384288444},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1508384288463},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1508384288463},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1508384288464},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1508384288465},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1508384288464},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1508384288479},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1508384288479},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1508384288480},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1508384288480},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1508384288481},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1508384288479},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1508384288490},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1508384288492},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1508384288502},{"_id":"themes/next/source/images/归档.zip","hash":"7e127854a7c033241cdde9780fd5868ba7c70334","modified":1508405836491},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1508384288474},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1508384288519},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1508384288499}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"git不提交空文件夹结构解决办法","date":"2016-12-19T07:21:46.000Z","_content":"git 默认忽略空目录结构,所以要在每个空目录下添加.gitignore文件 让git检测到空目录\n\ncd到git目录下 执行以下命令\n```\n$ find . -type d -empty -exec touch {}/.gitignore \\;\n```\n","source":"_posts/git不提交空文件夹结构解决办法.md","raw":"---\ntitle: git不提交空文件夹结构解决办法\ndate: 2016-12-19 15:21:46\ntags: git\n---\ngit 默认忽略空目录结构,所以要在每个空目录下添加.gitignore文件 让git检测到空目录\n\ncd到git目录下 执行以下命令\n```\n$ find . -type d -empty -exec touch {}/.gitignore \\;\n```\n","slug":"git不提交空文件夹结构解决办法","published":1,"updated":"2017-10-19T10:44:23.436Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8yck60i00000dxjvylq9gcp","content":"<p>git 默认忽略空目录结构,所以要在每个空目录下添加.gitignore文件 让git检测到空目录</p>\n<p>cd到git目录下 执行以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ find . -type d -empty -exec touch &#123;&#125;/.gitignore \\;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>git 默认忽略空目录结构,所以要在每个空目录下添加.gitignore文件 让git检测到空目录</p>\n<p>cd到git目录下 执行以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ find . -type d -empty -exec touch &#123;&#125;/.gitignore \\;</div></pre></td></tr></table></figure></p>\n"},{"title":"CentOS+Hexo+Git搭建静态博客","date":"2017-05-10T08:27:25.000Z","_content":"#### 1. 使用EPEL安装nodeJs\n>  EPEL（Extra Packages for Enterprise Linux）企业版Linux的额外软件包，是Fedora小组维护的一个软件仓库项目，为RHEL/CentOS提供他们默认不提供的软件包。\n因为Hexo是跑在nodejs环境下的,所以要装nodejs环境\n\n首先查看当前系统下是否安装了nodeJs\n```\n$ node -v\n```\n如果没有安装则继续下面的步骤\n```\n# 先确认系统是否已经安装了epel-release包：\n$ yum info epel-release\n```\n如果有输出有关epel-release的已安装信息，则说明已经安装，如果提示没有安装或可安装，则安装\n```\n$ sudo yum install epel-release\n```\n安装完后，就可以使用yum命令安装nodejs了，安装的一般会是较新的版本，并且会将npm作为依赖包一起安装\n```\n$ sudo yum install nodejs\n```\n安装完成后，验证是否正确的安装，node -v，如果输出版本信息，说明成功安装\n```\n$ node -v\n```\n#### 2.安装git\n查看系统是否安装了git\n```\n$ git --version\n```\n如果没有版本信息,则继续下面的步骤\n```\n$ yum install git\n```\n然后使用yum –version命令查看是否有版本信息,有版本信息则安装成功\n\n然后配置一下全局的git用户信息,先查看配置信息\n```\n$ git config --list\n```\n如果没有配置过,则\n```\n$  git config --global user.name \"输入你的用户名\"\n$  git config --global user.email \"输入你的邮箱\"\n```\n#### 3.安装Hexo\n终于到了安装Hexo的一步了\n```\n$ npm install hexo-cli -g\n```\n一个命令搞定,然后建立博客目录\n```\n$ hexo init \"blogPath\"(你想要存放博客环境的路径)\n```\n现在进入博客目录\n```\n$ cd blogPath\n```\n然后安装server服务跑起来看一下是否成功\n\n在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下：\n```\n$ npm install hexo-server --save\n```\n安装此server后执行\n```\n$ hexo server\n```\n或者 ‘hexo s’ 这是上面命令的缩写,这个命令主要是用于让Hexo在本地运行一个虚拟服务器环境,可以看到修改的效果\n\n如果你是在远程的服务器在浏览器访问\n```\nhttp://你的服务器IP:4000\n```\n如果你是本地,则访问\n```\nhttp://localhost:4000\n```\n页面显示出来则成功建立了一个博客\n\n#### 4.配置Hexo\nHexo的配置文件是在博客目录下的 _config.yml文件,在博客目录下执行\n```\n$ vim _config.yml\n```\n最上面呈现的是博客的基本信息\n```\ntitle: #网站标题\nsubtitle: #子标题\ndescription: #博客简洁\nauthor: #博客作者\nlanguage: zh-Hans #使用的语言环境 zh-Hans为中文\nemail: #邮箱\nkeywords: #关键字\n```\n关键点在于后面的这些信息,一会有用到,先混个脸熟\n```\n...\ntheme: #使用模板\n...\ndeploy: #部署信息配置\ntype: git #部署类型\nrepository: xxxx #你的git仓库地址\nbranch: master #推送的分支\n```\n#### 5.创建Repository\n##### 登录github,创建一个新的Repository\n命名规则为’你的github用户名.github.io’ 一定要按照这个规则命名\n\n创建成功后copy这个仓库的SSH地址\n```\n大致长这个样子\ngit@github.com:用户名/用户名.github.io.git\n```\n然后编辑上面说到的Hexo配置文件,找到部署信息配置,在repository后面加上刚刚复制的地址(冒号后面记得加空格),其他字段按照上面的示例配置.\n\n然后保存配置文件\n```\nesc键 然后直接输入:wq 就保存了\n```\n##### 设置SSH key\n检验是否已存在key\n\n分别执行命令\n```\n$ cd ~\n$ cd  .ssh\n```\n再执行命令 ls 查看是有已有key文件,一般存在key的话都会显示id_rsa.pub 和 id_dsa.pub这两个文件,没有key什么都不会显示\n\n添加一个 SSH key\n```\n# email为你的github登录邮箱\n$ ssh-keygen -t rsa -C \"your_email@mail.com\"\n```\n会提示你指定文件名,如果什么都不输入,直接回车,会默认使用id_rsa.pub为ssh key文件名\n\n回车之后,需要输入两次密码,这个密码是你push文件的时候要输入的密码，而不是github的密码,如果不打算使用密码,直接回车就好,然后就会看到ssh key添加成功\n\n然后使用命令显示ssh key内容\n```\n$ cat /roor/.ssh/id_rsa.pub\n```\n会出来一大坨东西,直接全部复制,然后到你的github账户\n\n点击右上角你的头像,选择’settings’,选择左边的’SSH and GPG keys’ 在SSH keys区域,选择New SSH key,然后把刚刚复制的粘贴进,保存,就OK了\n\n回到命令行,输入下面命令,测试是否添加正确\n\n```\n$ ssh -T git@github.com\n```\n如果成功,他会显示\n```\nHi xxx! You've successfully authenticated, but GitHub does not provide shell access.\n```\n到这里,git上的所有操作,基本结束.\n\n#### 6.部署到github\nHexo提供了两个命令,先使用generate生成静态文件,然后使用deploy命令,他会根据配置文件里,我们填入的git信息,执行push\n\n```\n$ hexo generate\n$ hexo deploy\n```\n实际使用中每次都要写两个命令太麻烦了,所以Hexo提供了缩写命令’g -d’ 生成后,直接推送到git\n\n```\n$ hexo g -d\n```\n等待命令执行完毕后,可以查看代码是否已提交到github上,然后在浏览器输入’你的用户名.github.io’就可以访问了\n\n#### 7.使用Hexo写博客\n##### 删除博客\n\n默认Hexo会有一片hello,word的博客示例\n正好拿来练手\n\n删除博客需要进入博客根目录/source/_posts目录中删除文件后执行下面的命令就好了\n\n```\n$ hexo clean\n```\n##### 新建博客\n\n在博客目录下,使用以下命令,即可在/source/_posts目录下新建一个.md文件\n\n```\n$ hexo new 文章名\n```\n找到这个文件,对他进行编辑就可以了.\n\n#### 8. 使用Hexo主题\n\n我这里用的是大名鼎鼎的Next,我就用Next举例子了,其他的主题,可以看他们对应的说明,都会有教程的\n\ncd到博客目录下,使用下面的Git命令,将next拉到本地\n\n```\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n编辑Hexo配置文件,将theme一项后面改为next(记得冒号后面加空格)\n\n执行 hexo s –debug 开启本地站点,并进入调试模式,看下效果\n\nnext提供了三种风格,关于next的配置,需要到博客目录/themes/next下面 找到_config.yml文件进行配置,具体配置到next的官网看就可以了.\n\n##### 注意\n\n* themes目录是Hexo的主题模板文件夹\n* Hexo的配置文件命名风格都是以_config.yml命名,模板的_config.yml和Hexo的_config.yml是两回事,千万不要改错了!!!\n\n```\nhexo配置文件路径\n博客目录/_config.yml\n模板配置文件路径\n博客目录/themes/对应的模板/_config.yml\n```\n大致的从搭建到使用的步骤就是这些.\n\n从上周开始我尝试了wordpress,hexo和jekyll.也踩了很多坑,文字太多,没办法一一表述.\n\n虽然最后都解决了,并且可以正常运行了,但是犹豫再三还是放弃了\n\n最终选择了Hexo,其实主要还是觉得利用上github比较酷,感觉很专业\n\n国内还可以选择coding替代github,coding可以选择北京和香港的节点,比github要快,需要的自行百度\n\n我个人也很喜欢jekyll,还有喵神写的那个他博客用的模板.\n","source":"_posts/CentOS-Hexo-Git搭建静态博客.md","raw":"---\ntitle: CentOS+Hexo+Git搭建静态博客\ndate: 2017-5-10 16:27:25\ntags: hexo静态博客\n---\n#### 1. 使用EPEL安装nodeJs\n>  EPEL（Extra Packages for Enterprise Linux）企业版Linux的额外软件包，是Fedora小组维护的一个软件仓库项目，为RHEL/CentOS提供他们默认不提供的软件包。\n因为Hexo是跑在nodejs环境下的,所以要装nodejs环境\n\n首先查看当前系统下是否安装了nodeJs\n```\n$ node -v\n```\n如果没有安装则继续下面的步骤\n```\n# 先确认系统是否已经安装了epel-release包：\n$ yum info epel-release\n```\n如果有输出有关epel-release的已安装信息，则说明已经安装，如果提示没有安装或可安装，则安装\n```\n$ sudo yum install epel-release\n```\n安装完后，就可以使用yum命令安装nodejs了，安装的一般会是较新的版本，并且会将npm作为依赖包一起安装\n```\n$ sudo yum install nodejs\n```\n安装完成后，验证是否正确的安装，node -v，如果输出版本信息，说明成功安装\n```\n$ node -v\n```\n#### 2.安装git\n查看系统是否安装了git\n```\n$ git --version\n```\n如果没有版本信息,则继续下面的步骤\n```\n$ yum install git\n```\n然后使用yum –version命令查看是否有版本信息,有版本信息则安装成功\n\n然后配置一下全局的git用户信息,先查看配置信息\n```\n$ git config --list\n```\n如果没有配置过,则\n```\n$  git config --global user.name \"输入你的用户名\"\n$  git config --global user.email \"输入你的邮箱\"\n```\n#### 3.安装Hexo\n终于到了安装Hexo的一步了\n```\n$ npm install hexo-cli -g\n```\n一个命令搞定,然后建立博客目录\n```\n$ hexo init \"blogPath\"(你想要存放博客环境的路径)\n```\n现在进入博客目录\n```\n$ cd blogPath\n```\n然后安装server服务跑起来看一下是否成功\n\n在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下：\n```\n$ npm install hexo-server --save\n```\n安装此server后执行\n```\n$ hexo server\n```\n或者 ‘hexo s’ 这是上面命令的缩写,这个命令主要是用于让Hexo在本地运行一个虚拟服务器环境,可以看到修改的效果\n\n如果你是在远程的服务器在浏览器访问\n```\nhttp://你的服务器IP:4000\n```\n如果你是本地,则访问\n```\nhttp://localhost:4000\n```\n页面显示出来则成功建立了一个博客\n\n#### 4.配置Hexo\nHexo的配置文件是在博客目录下的 _config.yml文件,在博客目录下执行\n```\n$ vim _config.yml\n```\n最上面呈现的是博客的基本信息\n```\ntitle: #网站标题\nsubtitle: #子标题\ndescription: #博客简洁\nauthor: #博客作者\nlanguage: zh-Hans #使用的语言环境 zh-Hans为中文\nemail: #邮箱\nkeywords: #关键字\n```\n关键点在于后面的这些信息,一会有用到,先混个脸熟\n```\n...\ntheme: #使用模板\n...\ndeploy: #部署信息配置\ntype: git #部署类型\nrepository: xxxx #你的git仓库地址\nbranch: master #推送的分支\n```\n#### 5.创建Repository\n##### 登录github,创建一个新的Repository\n命名规则为’你的github用户名.github.io’ 一定要按照这个规则命名\n\n创建成功后copy这个仓库的SSH地址\n```\n大致长这个样子\ngit@github.com:用户名/用户名.github.io.git\n```\n然后编辑上面说到的Hexo配置文件,找到部署信息配置,在repository后面加上刚刚复制的地址(冒号后面记得加空格),其他字段按照上面的示例配置.\n\n然后保存配置文件\n```\nesc键 然后直接输入:wq 就保存了\n```\n##### 设置SSH key\n检验是否已存在key\n\n分别执行命令\n```\n$ cd ~\n$ cd  .ssh\n```\n再执行命令 ls 查看是有已有key文件,一般存在key的话都会显示id_rsa.pub 和 id_dsa.pub这两个文件,没有key什么都不会显示\n\n添加一个 SSH key\n```\n# email为你的github登录邮箱\n$ ssh-keygen -t rsa -C \"your_email@mail.com\"\n```\n会提示你指定文件名,如果什么都不输入,直接回车,会默认使用id_rsa.pub为ssh key文件名\n\n回车之后,需要输入两次密码,这个密码是你push文件的时候要输入的密码，而不是github的密码,如果不打算使用密码,直接回车就好,然后就会看到ssh key添加成功\n\n然后使用命令显示ssh key内容\n```\n$ cat /roor/.ssh/id_rsa.pub\n```\n会出来一大坨东西,直接全部复制,然后到你的github账户\n\n点击右上角你的头像,选择’settings’,选择左边的’SSH and GPG keys’ 在SSH keys区域,选择New SSH key,然后把刚刚复制的粘贴进,保存,就OK了\n\n回到命令行,输入下面命令,测试是否添加正确\n\n```\n$ ssh -T git@github.com\n```\n如果成功,他会显示\n```\nHi xxx! You've successfully authenticated, but GitHub does not provide shell access.\n```\n到这里,git上的所有操作,基本结束.\n\n#### 6.部署到github\nHexo提供了两个命令,先使用generate生成静态文件,然后使用deploy命令,他会根据配置文件里,我们填入的git信息,执行push\n\n```\n$ hexo generate\n$ hexo deploy\n```\n实际使用中每次都要写两个命令太麻烦了,所以Hexo提供了缩写命令’g -d’ 生成后,直接推送到git\n\n```\n$ hexo g -d\n```\n等待命令执行完毕后,可以查看代码是否已提交到github上,然后在浏览器输入’你的用户名.github.io’就可以访问了\n\n#### 7.使用Hexo写博客\n##### 删除博客\n\n默认Hexo会有一片hello,word的博客示例\n正好拿来练手\n\n删除博客需要进入博客根目录/source/_posts目录中删除文件后执行下面的命令就好了\n\n```\n$ hexo clean\n```\n##### 新建博客\n\n在博客目录下,使用以下命令,即可在/source/_posts目录下新建一个.md文件\n\n```\n$ hexo new 文章名\n```\n找到这个文件,对他进行编辑就可以了.\n\n#### 8. 使用Hexo主题\n\n我这里用的是大名鼎鼎的Next,我就用Next举例子了,其他的主题,可以看他们对应的说明,都会有教程的\n\ncd到博客目录下,使用下面的Git命令,将next拉到本地\n\n```\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n编辑Hexo配置文件,将theme一项后面改为next(记得冒号后面加空格)\n\n执行 hexo s –debug 开启本地站点,并进入调试模式,看下效果\n\nnext提供了三种风格,关于next的配置,需要到博客目录/themes/next下面 找到_config.yml文件进行配置,具体配置到next的官网看就可以了.\n\n##### 注意\n\n* themes目录是Hexo的主题模板文件夹\n* Hexo的配置文件命名风格都是以_config.yml命名,模板的_config.yml和Hexo的_config.yml是两回事,千万不要改错了!!!\n\n```\nhexo配置文件路径\n博客目录/_config.yml\n模板配置文件路径\n博客目录/themes/对应的模板/_config.yml\n```\n大致的从搭建到使用的步骤就是这些.\n\n从上周开始我尝试了wordpress,hexo和jekyll.也踩了很多坑,文字太多,没办法一一表述.\n\n虽然最后都解决了,并且可以正常运行了,但是犹豫再三还是放弃了\n\n最终选择了Hexo,其实主要还是觉得利用上github比较酷,感觉很专业\n\n国内还可以选择coding替代github,coding可以选择北京和香港的节点,比github要快,需要的自行百度\n\n我个人也很喜欢jekyll,还有喵神写的那个他博客用的模板.\n","slug":"CentOS-Hexo-Git搭建静态博客","published":1,"updated":"2017-10-19T10:44:23.436Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8yck60o00010dxjc1sa1iyv","content":"<h4 id=\"1-使用EPEL安装nodeJs\"><a href=\"#1-使用EPEL安装nodeJs\" class=\"headerlink\" title=\"1. 使用EPEL安装nodeJs\"></a>1. 使用EPEL安装nodeJs</h4><blockquote>\n<p> EPEL（Extra Packages for Enterprise Linux）企业版Linux的额外软件包，是Fedora小组维护的一个软件仓库项目，为RHEL/CentOS提供他们默认不提供的软件包。<br>因为Hexo是跑在nodejs环境下的,所以要装nodejs环境</p>\n</blockquote>\n<p>首先查看当前系统下是否安装了nodeJs<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ node -v</div></pre></td></tr></table></figure></p>\n<p>如果没有安装则继续下面的步骤<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 先确认系统是否已经安装了epel-release包：</div><div class=\"line\">$ yum info epel-release</div></pre></td></tr></table></figure></p>\n<p>如果有输出有关epel-release的已安装信息，则说明已经安装，如果提示没有安装或可安装，则安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum install epel-release</div></pre></td></tr></table></figure></p>\n<p>安装完后，就可以使用yum命令安装nodejs了，安装的一般会是较新的版本，并且会将npm作为依赖包一起安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum install nodejs</div></pre></td></tr></table></figure></p>\n<p>安装完成后，验证是否正确的安装，node -v，如果输出版本信息，说明成功安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ node -v</div></pre></td></tr></table></figure></p>\n<h4 id=\"2-安装git\"><a href=\"#2-安装git\" class=\"headerlink\" title=\"2.安装git\"></a>2.安装git</h4><p>查看系统是否安装了git<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git --version</div></pre></td></tr></table></figure></p>\n<p>如果没有版本信息,则继续下面的步骤<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ yum install git</div></pre></td></tr></table></figure></p>\n<p>然后使用yum –version命令查看是否有版本信息,有版本信息则安装成功</p>\n<p>然后配置一下全局的git用户信息,先查看配置信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config --list</div></pre></td></tr></table></figure></p>\n<p>如果没有配置过,则<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  git config --global user.name &quot;输入你的用户名&quot;</div><div class=\"line\">$  git config --global user.email &quot;输入你的邮箱&quot;</div></pre></td></tr></table></figure></p>\n<h4 id=\"3-安装Hexo\"><a href=\"#3-安装Hexo\" class=\"headerlink\" title=\"3.安装Hexo\"></a>3.安装Hexo</h4><p>终于到了安装Hexo的一步了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-cli -g</div></pre></td></tr></table></figure></p>\n<p>一个命令搞定,然后建立博客目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init &quot;blogPath&quot;(你想要存放博客环境的路径)</div></pre></td></tr></table></figure></p>\n<p>现在进入博客目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd blogPath</div></pre></td></tr></table></figure></p>\n<p>然后安装server服务跑起来看一下是否成功</p>\n<p>在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-server --save</div></pre></td></tr></table></figure></p>\n<p>安装此server后执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure></p>\n<p>或者 ‘hexo s’ 这是上面命令的缩写,这个命令主要是用于让Hexo在本地运行一个虚拟服务器环境,可以看到修改的效果</p>\n<p>如果你是在远程的服务器在浏览器访问<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://你的服务器IP:4000</div></pre></td></tr></table></figure></p>\n<p>如果你是本地,则访问<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://localhost:4000</div></pre></td></tr></table></figure></p>\n<p>页面显示出来则成功建立了一个博客</p>\n<h4 id=\"4-配置Hexo\"><a href=\"#4-配置Hexo\" class=\"headerlink\" title=\"4.配置Hexo\"></a>4.配置Hexo</h4><p>Hexo的配置文件是在博客目录下的 _config.yml文件,在博客目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim _config.yml</div></pre></td></tr></table></figure></p>\n<p>最上面呈现的是博客的基本信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: #网站标题</div><div class=\"line\">subtitle: #子标题</div><div class=\"line\">description: #博客简洁</div><div class=\"line\">author: #博客作者</div><div class=\"line\">language: zh-Hans #使用的语言环境 zh-Hans为中文</div><div class=\"line\">email: #邮箱</div><div class=\"line\">keywords: #关键字</div></pre></td></tr></table></figure></p>\n<p>关键点在于后面的这些信息,一会有用到,先混个脸熟<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div><div class=\"line\">theme: #使用模板</div><div class=\"line\">...</div><div class=\"line\">deploy: #部署信息配置</div><div class=\"line\">type: git #部署类型</div><div class=\"line\">repository: xxxx #你的git仓库地址</div><div class=\"line\">branch: master #推送的分支</div></pre></td></tr></table></figure></p>\n<h4 id=\"5-创建Repository\"><a href=\"#5-创建Repository\" class=\"headerlink\" title=\"5.创建Repository\"></a>5.创建Repository</h4><h5 id=\"登录github-创建一个新的Repository\"><a href=\"#登录github-创建一个新的Repository\" class=\"headerlink\" title=\"登录github,创建一个新的Repository\"></a>登录github,创建一个新的Repository</h5><p>命名规则为’你的github用户名.github.io’ 一定要按照这个规则命名</p>\n<p>创建成功后copy这个仓库的SSH地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">大致长这个样子</div><div class=\"line\">git@github.com:用户名/用户名.github.io.git</div></pre></td></tr></table></figure></p>\n<p>然后编辑上面说到的Hexo配置文件,找到部署信息配置,在repository后面加上刚刚复制的地址(冒号后面记得加空格),其他字段按照上面的示例配置.</p>\n<p>然后保存配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">esc键 然后直接输入:wq 就保存了</div></pre></td></tr></table></figure></p>\n<h5 id=\"设置SSH-key\"><a href=\"#设置SSH-key\" class=\"headerlink\" title=\"设置SSH key\"></a>设置SSH key</h5><p>检验是否已存在key</p>\n<p>分别执行命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd ~</div><div class=\"line\">$ cd  .ssh</div></pre></td></tr></table></figure></p>\n<p>再执行命令 ls 查看是有已有key文件,一般存在key的话都会显示id_rsa.pub 和 id_dsa.pub这两个文件,没有key什么都不会显示</p>\n<p>添加一个 SSH key<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># email为你的github登录邮箱</div><div class=\"line\">$ ssh-keygen -t rsa -C &quot;your_email@mail.com&quot;</div></pre></td></tr></table></figure></p>\n<p>会提示你指定文件名,如果什么都不输入,直接回车,会默认使用id_rsa.pub为ssh key文件名</p>\n<p>回车之后,需要输入两次密码,这个密码是你push文件的时候要输入的密码，而不是github的密码,如果不打算使用密码,直接回车就好,然后就会看到ssh key添加成功</p>\n<p>然后使用命令显示ssh key内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat /roor/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p>\n<p>会出来一大坨东西,直接全部复制,然后到你的github账户</p>\n<p>点击右上角你的头像,选择’settings’,选择左边的’SSH and GPG keys’ 在SSH keys区域,选择New SSH key,然后把刚刚复制的粘贴进,保存,就OK了</p>\n<p>回到命令行,输入下面命令,测试是否添加正确</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh -T git@github.com</div></pre></td></tr></table></figure>\n<p>如果成功,他会显示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Hi xxx! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure></p>\n<p>到这里,git上的所有操作,基本结束.</p>\n<h4 id=\"6-部署到github\"><a href=\"#6-部署到github\" class=\"headerlink\" title=\"6.部署到github\"></a>6.部署到github</h4><p>Hexo提供了两个命令,先使用generate生成静态文件,然后使用deploy命令,他会根据配置文件里,我们填入的git信息,执行push</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>实际使用中每次都要写两个命令太麻烦了,所以Hexo提供了缩写命令’g -d’ 生成后,直接推送到git</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g -d</div></pre></td></tr></table></figure>\n<p>等待命令执行完毕后,可以查看代码是否已提交到github上,然后在浏览器输入’你的用户名.github.io’就可以访问了</p>\n<h4 id=\"7-使用Hexo写博客\"><a href=\"#7-使用Hexo写博客\" class=\"headerlink\" title=\"7.使用Hexo写博客\"></a>7.使用Hexo写博客</h4><h5 id=\"删除博客\"><a href=\"#删除博客\" class=\"headerlink\" title=\"删除博客\"></a>删除博客</h5><p>默认Hexo会有一片hello,word的博客示例<br>正好拿来练手</p>\n<p>删除博客需要进入博客根目录/source/_posts目录中删除文件后执行下面的命令就好了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div></pre></td></tr></table></figure>\n<h5 id=\"新建博客\"><a href=\"#新建博客\" class=\"headerlink\" title=\"新建博客\"></a>新建博客</h5><p>在博客目录下,使用以下命令,即可在/source/_posts目录下新建一个.md文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new 文章名</div></pre></td></tr></table></figure>\n<p>找到这个文件,对他进行编辑就可以了.</p>\n<h4 id=\"8-使用Hexo主题\"><a href=\"#8-使用Hexo主题\" class=\"headerlink\" title=\"8. 使用Hexo主题\"></a>8. 使用Hexo主题</h4><p>我这里用的是大名鼎鼎的Next,我就用Next举例子了,其他的主题,可以看他们对应的说明,都会有教程的</p>\n<p>cd到博客目录下,使用下面的Git命令,将next拉到本地</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>\n<p>编辑Hexo配置文件,将theme一项后面改为next(记得冒号后面加空格)</p>\n<p>执行 hexo s –debug 开启本地站点,并进入调试模式,看下效果</p>\n<p>next提供了三种风格,关于next的配置,需要到博客目录/themes/next下面 找到_config.yml文件进行配置,具体配置到next的官网看就可以了.</p>\n<h5 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h5><ul>\n<li>themes目录是Hexo的主题模板文件夹</li>\n<li>Hexo的配置文件命名风格都是以_config.yml命名,模板的_config.yml和Hexo的_config.yml是两回事,千万不要改错了!!!</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo配置文件路径</div><div class=\"line\">博客目录/_config.yml</div><div class=\"line\">模板配置文件路径</div><div class=\"line\">博客目录/themes/对应的模板/_config.yml</div></pre></td></tr></table></figure>\n<p>大致的从搭建到使用的步骤就是这些.</p>\n<p>从上周开始我尝试了wordpress,hexo和jekyll.也踩了很多坑,文字太多,没办法一一表述.</p>\n<p>虽然最后都解决了,并且可以正常运行了,但是犹豫再三还是放弃了</p>\n<p>最终选择了Hexo,其实主要还是觉得利用上github比较酷,感觉很专业</p>\n<p>国内还可以选择coding替代github,coding可以选择北京和香港的节点,比github要快,需要的自行百度</p>\n<p>我个人也很喜欢jekyll,还有喵神写的那个他博客用的模板.</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-使用EPEL安装nodeJs\"><a href=\"#1-使用EPEL安装nodeJs\" class=\"headerlink\" title=\"1. 使用EPEL安装nodeJs\"></a>1. 使用EPEL安装nodeJs</h4><blockquote>\n<p> EPEL（Extra Packages for Enterprise Linux）企业版Linux的额外软件包，是Fedora小组维护的一个软件仓库项目，为RHEL/CentOS提供他们默认不提供的软件包。<br>因为Hexo是跑在nodejs环境下的,所以要装nodejs环境</p>\n</blockquote>\n<p>首先查看当前系统下是否安装了nodeJs<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ node -v</div></pre></td></tr></table></figure></p>\n<p>如果没有安装则继续下面的步骤<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 先确认系统是否已经安装了epel-release包：</div><div class=\"line\">$ yum info epel-release</div></pre></td></tr></table></figure></p>\n<p>如果有输出有关epel-release的已安装信息，则说明已经安装，如果提示没有安装或可安装，则安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum install epel-release</div></pre></td></tr></table></figure></p>\n<p>安装完后，就可以使用yum命令安装nodejs了，安装的一般会是较新的版本，并且会将npm作为依赖包一起安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum install nodejs</div></pre></td></tr></table></figure></p>\n<p>安装完成后，验证是否正确的安装，node -v，如果输出版本信息，说明成功安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ node -v</div></pre></td></tr></table></figure></p>\n<h4 id=\"2-安装git\"><a href=\"#2-安装git\" class=\"headerlink\" title=\"2.安装git\"></a>2.安装git</h4><p>查看系统是否安装了git<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git --version</div></pre></td></tr></table></figure></p>\n<p>如果没有版本信息,则继续下面的步骤<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ yum install git</div></pre></td></tr></table></figure></p>\n<p>然后使用yum –version命令查看是否有版本信息,有版本信息则安装成功</p>\n<p>然后配置一下全局的git用户信息,先查看配置信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config --list</div></pre></td></tr></table></figure></p>\n<p>如果没有配置过,则<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  git config --global user.name &quot;输入你的用户名&quot;</div><div class=\"line\">$  git config --global user.email &quot;输入你的邮箱&quot;</div></pre></td></tr></table></figure></p>\n<h4 id=\"3-安装Hexo\"><a href=\"#3-安装Hexo\" class=\"headerlink\" title=\"3.安装Hexo\"></a>3.安装Hexo</h4><p>终于到了安装Hexo的一步了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-cli -g</div></pre></td></tr></table></figure></p>\n<p>一个命令搞定,然后建立博客目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init &quot;blogPath&quot;(你想要存放博客环境的路径)</div></pre></td></tr></table></figure></p>\n<p>现在进入博客目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd blogPath</div></pre></td></tr></table></figure></p>\n<p>然后安装server服务跑起来看一下是否成功</p>\n<p>在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-server --save</div></pre></td></tr></table></figure></p>\n<p>安装此server后执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure></p>\n<p>或者 ‘hexo s’ 这是上面命令的缩写,这个命令主要是用于让Hexo在本地运行一个虚拟服务器环境,可以看到修改的效果</p>\n<p>如果你是在远程的服务器在浏览器访问<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://你的服务器IP:4000</div></pre></td></tr></table></figure></p>\n<p>如果你是本地,则访问<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://localhost:4000</div></pre></td></tr></table></figure></p>\n<p>页面显示出来则成功建立了一个博客</p>\n<h4 id=\"4-配置Hexo\"><a href=\"#4-配置Hexo\" class=\"headerlink\" title=\"4.配置Hexo\"></a>4.配置Hexo</h4><p>Hexo的配置文件是在博客目录下的 _config.yml文件,在博客目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim _config.yml</div></pre></td></tr></table></figure></p>\n<p>最上面呈现的是博客的基本信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: #网站标题</div><div class=\"line\">subtitle: #子标题</div><div class=\"line\">description: #博客简洁</div><div class=\"line\">author: #博客作者</div><div class=\"line\">language: zh-Hans #使用的语言环境 zh-Hans为中文</div><div class=\"line\">email: #邮箱</div><div class=\"line\">keywords: #关键字</div></pre></td></tr></table></figure></p>\n<p>关键点在于后面的这些信息,一会有用到,先混个脸熟<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div><div class=\"line\">theme: #使用模板</div><div class=\"line\">...</div><div class=\"line\">deploy: #部署信息配置</div><div class=\"line\">type: git #部署类型</div><div class=\"line\">repository: xxxx #你的git仓库地址</div><div class=\"line\">branch: master #推送的分支</div></pre></td></tr></table></figure></p>\n<h4 id=\"5-创建Repository\"><a href=\"#5-创建Repository\" class=\"headerlink\" title=\"5.创建Repository\"></a>5.创建Repository</h4><h5 id=\"登录github-创建一个新的Repository\"><a href=\"#登录github-创建一个新的Repository\" class=\"headerlink\" title=\"登录github,创建一个新的Repository\"></a>登录github,创建一个新的Repository</h5><p>命名规则为’你的github用户名.github.io’ 一定要按照这个规则命名</p>\n<p>创建成功后copy这个仓库的SSH地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">大致长这个样子</div><div class=\"line\">git@github.com:用户名/用户名.github.io.git</div></pre></td></tr></table></figure></p>\n<p>然后编辑上面说到的Hexo配置文件,找到部署信息配置,在repository后面加上刚刚复制的地址(冒号后面记得加空格),其他字段按照上面的示例配置.</p>\n<p>然后保存配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">esc键 然后直接输入:wq 就保存了</div></pre></td></tr></table></figure></p>\n<h5 id=\"设置SSH-key\"><a href=\"#设置SSH-key\" class=\"headerlink\" title=\"设置SSH key\"></a>设置SSH key</h5><p>检验是否已存在key</p>\n<p>分别执行命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd ~</div><div class=\"line\">$ cd  .ssh</div></pre></td></tr></table></figure></p>\n<p>再执行命令 ls 查看是有已有key文件,一般存在key的话都会显示id_rsa.pub 和 id_dsa.pub这两个文件,没有key什么都不会显示</p>\n<p>添加一个 SSH key<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># email为你的github登录邮箱</div><div class=\"line\">$ ssh-keygen -t rsa -C &quot;your_email@mail.com&quot;</div></pre></td></tr></table></figure></p>\n<p>会提示你指定文件名,如果什么都不输入,直接回车,会默认使用id_rsa.pub为ssh key文件名</p>\n<p>回车之后,需要输入两次密码,这个密码是你push文件的时候要输入的密码，而不是github的密码,如果不打算使用密码,直接回车就好,然后就会看到ssh key添加成功</p>\n<p>然后使用命令显示ssh key内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat /roor/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p>\n<p>会出来一大坨东西,直接全部复制,然后到你的github账户</p>\n<p>点击右上角你的头像,选择’settings’,选择左边的’SSH and GPG keys’ 在SSH keys区域,选择New SSH key,然后把刚刚复制的粘贴进,保存,就OK了</p>\n<p>回到命令行,输入下面命令,测试是否添加正确</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh -T git@github.com</div></pre></td></tr></table></figure>\n<p>如果成功,他会显示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Hi xxx! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure></p>\n<p>到这里,git上的所有操作,基本结束.</p>\n<h4 id=\"6-部署到github\"><a href=\"#6-部署到github\" class=\"headerlink\" title=\"6.部署到github\"></a>6.部署到github</h4><p>Hexo提供了两个命令,先使用generate生成静态文件,然后使用deploy命令,他会根据配置文件里,我们填入的git信息,执行push</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>实际使用中每次都要写两个命令太麻烦了,所以Hexo提供了缩写命令’g -d’ 生成后,直接推送到git</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g -d</div></pre></td></tr></table></figure>\n<p>等待命令执行完毕后,可以查看代码是否已提交到github上,然后在浏览器输入’你的用户名.github.io’就可以访问了</p>\n<h4 id=\"7-使用Hexo写博客\"><a href=\"#7-使用Hexo写博客\" class=\"headerlink\" title=\"7.使用Hexo写博客\"></a>7.使用Hexo写博客</h4><h5 id=\"删除博客\"><a href=\"#删除博客\" class=\"headerlink\" title=\"删除博客\"></a>删除博客</h5><p>默认Hexo会有一片hello,word的博客示例<br>正好拿来练手</p>\n<p>删除博客需要进入博客根目录/source/_posts目录中删除文件后执行下面的命令就好了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div></pre></td></tr></table></figure>\n<h5 id=\"新建博客\"><a href=\"#新建博客\" class=\"headerlink\" title=\"新建博客\"></a>新建博客</h5><p>在博客目录下,使用以下命令,即可在/source/_posts目录下新建一个.md文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new 文章名</div></pre></td></tr></table></figure>\n<p>找到这个文件,对他进行编辑就可以了.</p>\n<h4 id=\"8-使用Hexo主题\"><a href=\"#8-使用Hexo主题\" class=\"headerlink\" title=\"8. 使用Hexo主题\"></a>8. 使用Hexo主题</h4><p>我这里用的是大名鼎鼎的Next,我就用Next举例子了,其他的主题,可以看他们对应的说明,都会有教程的</p>\n<p>cd到博客目录下,使用下面的Git命令,将next拉到本地</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>\n<p>编辑Hexo配置文件,将theme一项后面改为next(记得冒号后面加空格)</p>\n<p>执行 hexo s –debug 开启本地站点,并进入调试模式,看下效果</p>\n<p>next提供了三种风格,关于next的配置,需要到博客目录/themes/next下面 找到_config.yml文件进行配置,具体配置到next的官网看就可以了.</p>\n<h5 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h5><ul>\n<li>themes目录是Hexo的主题模板文件夹</li>\n<li>Hexo的配置文件命名风格都是以_config.yml命名,模板的_config.yml和Hexo的_config.yml是两回事,千万不要改错了!!!</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo配置文件路径</div><div class=\"line\">博客目录/_config.yml</div><div class=\"line\">模板配置文件路径</div><div class=\"line\">博客目录/themes/对应的模板/_config.yml</div></pre></td></tr></table></figure>\n<p>大致的从搭建到使用的步骤就是这些.</p>\n<p>从上周开始我尝试了wordpress,hexo和jekyll.也踩了很多坑,文字太多,没办法一一表述.</p>\n<p>虽然最后都解决了,并且可以正常运行了,但是犹豫再三还是放弃了</p>\n<p>最终选择了Hexo,其实主要还是觉得利用上github比较酷,感觉很专业</p>\n<p>国内还可以选择coding替代github,coding可以选择北京和香港的节点,比github要快,需要的自行百度</p>\n<p>我个人也很喜欢jekyll,还有喵神写的那个他博客用的模板.</p>\n"},{"title":"ubantu一键换内核并安装锐速脚本(收藏)","date":"2017-10-19T09:04:40.000Z","_content":"{% note danger %}\n* 没有任何多余的判断，非ubuntu16.04和ubuntu14.04请勿运行\n* 安装完会自动重启 正常现象 重启后就安装好了锐速，可以使用ps aux | grep appex来检测是否运行\n* 如果锐速没有自动安装可以使用/appex/appexinstall.sh来安装\n{% endnote %}\n\n\n#### 说明\n查看ubantu系统内核,非ubuntu16.04和ubuntu14.04请勿继续运行\n```\n$ dpkg --list | grep linux-image\n```\n请将[脚本内容](#脚本内容)中的代码复制,保存为ruisu.sh 存放到ubuntu中,然后执行下面的命令\n#### 执行脚本\n```\n$ bash ruisu.sh\n```\n<span id = \"脚本内容\"></span>\n#### 脚本内容\n```\n#!/bin/bash\n\n# Ubuntu/14.04/3.16.0-43-generic/x64\n# Ubuntu/16.04/4.4.0-47-generic/x64\n\n[ -n \"`cat /etc/issue | grep \"Ubuntu 16.04\"`\" ] && echo \"Ubuntu 16.04\" && KER_VER=\"4.4.0-47-generic\"\n[ -n \"`cat /etc/issue | grep \"Ubuntu 14.04\"`\" ] && echo \"Ubuntu 14.04\" && KER_VER=\"3.16.0-43-generic\"\n\ncp /etc/default/grub /etc/default/grub.old\nsed -ir \"s/GRUB_DEFAULT=.*/GRUB_DEFAULT=\\\"Advanced options for Ubuntu>Ubuntu, with Linux $KER_VER\\\"/g\" /etc/default/grub\n# update-grub\napt-get update\napt-get install -y linux-image-extra-$KER_VER\n# reboot\n\nmkdir -p /appex\ncat > /appex/appexinstall.sh << TEMPEOF\nwget --no-check-certificate -qO /tmp/appex.sh \"https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh\" && bash /tmp/appex.sh 'install' << EOF\n\nEOF\ncp /etc/rc.local.old.ruisu /etc/rc.local\nrm /etc/rc.local.old.ruisu\nTEMPEOF\n\n# bash /appex/appexinstall.sh\n# ps aux | grep appex\n\n\nif [ ! -f \"/etc/rc.local.old.ruisu\" ]; then\necho \"first time run this script, backup the rc.local\"\ncp /etc/rc.local /etc/rc.local.old.ruisu\nfi\n# cp /etc/rc.local /etc/rc.local.old.ruisu\nsed -i '$d' /etc/rc.local\necho \"bash /appex/appexinstall.sh\" >> /etc/rc.local\necho \"exit 0\" >> /etc/rc.local\nreboot\n\n```\n\n","source":"_posts/ubantu一键换内核并安装锐速脚本.md","raw":"---\ntitle: ubantu一键换内核并安装锐速脚本(收藏)\ndate: 2017-10-19 17:04:40\ntags: ss,vps\n---\n{% note danger %}\n* 没有任何多余的判断，非ubuntu16.04和ubuntu14.04请勿运行\n* 安装完会自动重启 正常现象 重启后就安装好了锐速，可以使用ps aux | grep appex来检测是否运行\n* 如果锐速没有自动安装可以使用/appex/appexinstall.sh来安装\n{% endnote %}\n\n\n#### 说明\n查看ubantu系统内核,非ubuntu16.04和ubuntu14.04请勿继续运行\n```\n$ dpkg --list | grep linux-image\n```\n请将[脚本内容](#脚本内容)中的代码复制,保存为ruisu.sh 存放到ubuntu中,然后执行下面的命令\n#### 执行脚本\n```\n$ bash ruisu.sh\n```\n<span id = \"脚本内容\"></span>\n#### 脚本内容\n```\n#!/bin/bash\n\n# Ubuntu/14.04/3.16.0-43-generic/x64\n# Ubuntu/16.04/4.4.0-47-generic/x64\n\n[ -n \"`cat /etc/issue | grep \"Ubuntu 16.04\"`\" ] && echo \"Ubuntu 16.04\" && KER_VER=\"4.4.0-47-generic\"\n[ -n \"`cat /etc/issue | grep \"Ubuntu 14.04\"`\" ] && echo \"Ubuntu 14.04\" && KER_VER=\"3.16.0-43-generic\"\n\ncp /etc/default/grub /etc/default/grub.old\nsed -ir \"s/GRUB_DEFAULT=.*/GRUB_DEFAULT=\\\"Advanced options for Ubuntu>Ubuntu, with Linux $KER_VER\\\"/g\" /etc/default/grub\n# update-grub\napt-get update\napt-get install -y linux-image-extra-$KER_VER\n# reboot\n\nmkdir -p /appex\ncat > /appex/appexinstall.sh << TEMPEOF\nwget --no-check-certificate -qO /tmp/appex.sh \"https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh\" && bash /tmp/appex.sh 'install' << EOF\n\nEOF\ncp /etc/rc.local.old.ruisu /etc/rc.local\nrm /etc/rc.local.old.ruisu\nTEMPEOF\n\n# bash /appex/appexinstall.sh\n# ps aux | grep appex\n\n\nif [ ! -f \"/etc/rc.local.old.ruisu\" ]; then\necho \"first time run this script, backup the rc.local\"\ncp /etc/rc.local /etc/rc.local.old.ruisu\nfi\n# cp /etc/rc.local /etc/rc.local.old.ruisu\nsed -i '$d' /etc/rc.local\necho \"bash /appex/appexinstall.sh\" >> /etc/rc.local\necho \"exit 0\" >> /etc/rc.local\nreboot\n\n```\n\n","slug":"ubantu一键换内核并安装锐速脚本","published":1,"updated":"2017-10-19T10:44:23.436Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8yck60w00030dxj4ialiom7","content":"<div class=\"note danger\"><ul>\n<li>没有任何多余的判断，非ubuntu16.04和ubuntu14.04请勿运行</li>\n<li>安装完会自动重启 正常现象 重启后就安装好了锐速，可以使用ps aux | grep appex来检测是否运行</li>\n<li>如果锐速没有自动安装可以使用/appex/appexinstall.sh来安装</li>\n</ul></div>\n<h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4><p>查看ubantu系统内核,非ubuntu16.04和ubuntu14.04请勿继续运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ dpkg --list | grep linux-image</div></pre></td></tr></table></figure></p>\n<p>请将<a href=\"#脚本内容\">脚本内容</a>中的代码复制,保存为ruisu.sh 存放到ubuntu中,然后执行下面的命令</p>\n<h4 id=\"执行脚本\"><a href=\"#执行脚本\" class=\"headerlink\" title=\"执行脚本\"></a>执行脚本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ bash ruisu.sh</div></pre></td></tr></table></figure>\n<p><span id=\"脚本内容\"></span></p>\n<h4 id=\"脚本内容\"><a href=\"#脚本内容\" class=\"headerlink\" title=\"脚本内容\"></a>脚本内容</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\"></div><div class=\"line\"># Ubuntu/14.04/3.16.0-43-generic/x64</div><div class=\"line\"># Ubuntu/16.04/4.4.0-47-generic/x64</div><div class=\"line\"></div><div class=\"line\">[ -n &quot;`cat /etc/issue | grep &quot;Ubuntu 16.04&quot;`&quot; ] &amp;&amp; echo &quot;Ubuntu 16.04&quot; &amp;&amp; KER_VER=&quot;4.4.0-47-generic&quot;</div><div class=\"line\">[ -n &quot;`cat /etc/issue | grep &quot;Ubuntu 14.04&quot;`&quot; ] &amp;&amp; echo &quot;Ubuntu 14.04&quot; &amp;&amp; KER_VER=&quot;3.16.0-43-generic&quot;</div><div class=\"line\"></div><div class=\"line\">cp /etc/default/grub /etc/default/grub.old</div><div class=\"line\">sed -ir &quot;s/GRUB_DEFAULT=.*/GRUB_DEFAULT=\\&quot;Advanced options for Ubuntu&gt;Ubuntu, with Linux $KER_VER\\&quot;/g&quot; /etc/default/grub</div><div class=\"line\"># update-grub</div><div class=\"line\">apt-get update</div><div class=\"line\">apt-get install -y linux-image-extra-$KER_VER</div><div class=\"line\"># reboot</div><div class=\"line\"></div><div class=\"line\">mkdir -p /appex</div><div class=\"line\">cat &gt; /appex/appexinstall.sh &lt;&lt; TEMPEOF</div><div class=\"line\">wget --no-check-certificate -qO /tmp/appex.sh &quot;https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh&quot; &amp;&amp; bash /tmp/appex.sh &apos;install&apos; &lt;&lt; EOF</div><div class=\"line\"></div><div class=\"line\">EOF</div><div class=\"line\">cp /etc/rc.local.old.ruisu /etc/rc.local</div><div class=\"line\">rm /etc/rc.local.old.ruisu</div><div class=\"line\">TEMPEOF</div><div class=\"line\"></div><div class=\"line\"># bash /appex/appexinstall.sh</div><div class=\"line\"># ps aux | grep appex</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">if [ ! -f &quot;/etc/rc.local.old.ruisu&quot; ]; then</div><div class=\"line\">echo &quot;first time run this script, backup the rc.local&quot;</div><div class=\"line\">cp /etc/rc.local /etc/rc.local.old.ruisu</div><div class=\"line\">fi</div><div class=\"line\"># cp /etc/rc.local /etc/rc.local.old.ruisu</div><div class=\"line\">sed -i &apos;$d&apos; /etc/rc.local</div><div class=\"line\">echo &quot;bash /appex/appexinstall.sh&quot; &gt;&gt; /etc/rc.local</div><div class=\"line\">echo &quot;exit 0&quot; &gt;&gt; /etc/rc.local</div><div class=\"line\">reboot</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<div class=\"note danger\"><ul>\n<li>没有任何多余的判断，非ubuntu16.04和ubuntu14.04请勿运行</li>\n<li>安装完会自动重启 正常现象 重启后就安装好了锐速，可以使用ps aux | grep appex来检测是否运行</li>\n<li>如果锐速没有自动安装可以使用/appex/appexinstall.sh来安装</li>\n</ul></div>\n<h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4><p>查看ubantu系统内核,非ubuntu16.04和ubuntu14.04请勿继续运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ dpkg --list | grep linux-image</div></pre></td></tr></table></figure></p>\n<p>请将<a href=\"#脚本内容\">脚本内容</a>中的代码复制,保存为ruisu.sh 存放到ubuntu中,然后执行下面的命令</p>\n<h4 id=\"执行脚本\"><a href=\"#执行脚本\" class=\"headerlink\" title=\"执行脚本\"></a>执行脚本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ bash ruisu.sh</div></pre></td></tr></table></figure>\n<p><span id=\"脚本内容\"></span></p>\n<h4 id=\"脚本内容\"><a href=\"#脚本内容\" class=\"headerlink\" title=\"脚本内容\"></a>脚本内容</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\"></div><div class=\"line\"># Ubuntu/14.04/3.16.0-43-generic/x64</div><div class=\"line\"># Ubuntu/16.04/4.4.0-47-generic/x64</div><div class=\"line\"></div><div class=\"line\">[ -n &quot;`cat /etc/issue | grep &quot;Ubuntu 16.04&quot;`&quot; ] &amp;&amp; echo &quot;Ubuntu 16.04&quot; &amp;&amp; KER_VER=&quot;4.4.0-47-generic&quot;</div><div class=\"line\">[ -n &quot;`cat /etc/issue | grep &quot;Ubuntu 14.04&quot;`&quot; ] &amp;&amp; echo &quot;Ubuntu 14.04&quot; &amp;&amp; KER_VER=&quot;3.16.0-43-generic&quot;</div><div class=\"line\"></div><div class=\"line\">cp /etc/default/grub /etc/default/grub.old</div><div class=\"line\">sed -ir &quot;s/GRUB_DEFAULT=.*/GRUB_DEFAULT=\\&quot;Advanced options for Ubuntu&gt;Ubuntu, with Linux $KER_VER\\&quot;/g&quot; /etc/default/grub</div><div class=\"line\"># update-grub</div><div class=\"line\">apt-get update</div><div class=\"line\">apt-get install -y linux-image-extra-$KER_VER</div><div class=\"line\"># reboot</div><div class=\"line\"></div><div class=\"line\">mkdir -p /appex</div><div class=\"line\">cat &gt; /appex/appexinstall.sh &lt;&lt; TEMPEOF</div><div class=\"line\">wget --no-check-certificate -qO /tmp/appex.sh &quot;https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh&quot; &amp;&amp; bash /tmp/appex.sh &apos;install&apos; &lt;&lt; EOF</div><div class=\"line\"></div><div class=\"line\">EOF</div><div class=\"line\">cp /etc/rc.local.old.ruisu /etc/rc.local</div><div class=\"line\">rm /etc/rc.local.old.ruisu</div><div class=\"line\">TEMPEOF</div><div class=\"line\"></div><div class=\"line\"># bash /appex/appexinstall.sh</div><div class=\"line\"># ps aux | grep appex</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">if [ ! -f &quot;/etc/rc.local.old.ruisu&quot; ]; then</div><div class=\"line\">echo &quot;first time run this script, backup the rc.local&quot;</div><div class=\"line\">cp /etc/rc.local /etc/rc.local.old.ruisu</div><div class=\"line\">fi</div><div class=\"line\"># cp /etc/rc.local /etc/rc.local.old.ruisu</div><div class=\"line\">sed -i &apos;$d&apos; /etc/rc.local</div><div class=\"line\">echo &quot;bash /appex/appexinstall.sh&quot; &gt;&gt; /etc/rc.local</div><div class=\"line\">echo &quot;exit 0&quot; &gt;&gt; /etc/rc.local</div><div class=\"line\">reboot</div></pre></td></tr></table></figure>\n"},{"title":"移动端工程结构总结","date":"2017-01-05T05:01:37.000Z","_content":"{% note info %}\n工作几年,对iOS开发工程目录结构的一些总结,个人认为面对中小型项目这样的目录分层是合理的.\n###### 优点\n这样划分,项目不会乱,配合代码规范可以提高项目可维护性,开发分工明确,可以应对常见的MVC,MVCS,MVP,MVVM等架构.\n###### 缺点\n划分的太细,有些类不太好分类,多人开发时需要提前订好规则,到底什么东西划分为哪类\n{% endnote %}\n\n##### 目录结构\n```\n|- Main\n    |- AppDelegate(程序入口)\n        |-AppDelegateService\n|-Classes(编码)\n    |-Module(模块)\n        |- Me(我的)\n        |- Home(首页)\n            |-View\n            |-Model\n            |-Controller\n            |-Api\n            |-Other\n        |-public(公用)\n    |-Expand(功能扩展)\n        |-3rdLib(三方库)\n        |-Tools(工具)\n        |-NetWork(网络工具)\n        |-DataBase(数据相关)\n        |-Macro(宏)\n        |-Manage(管理工具)\n|-Resources(资源)\n    |-图片资源\n    |-声音资源\n    |-文件资源\n\n```\n##### 网络层封装思路\n###### NetWorkTool\nPostEngine(请求引擎类)---------对请求的发送和响应结果进行处理\nResponse(响应类)-----------------封装了Http请求返回的数据结构\nAPI(接口类)--------------------------定义了接口方法\nAPIImpl(接口实现类)--------------实现接口方法。\n###### 设计思路\n低耦合，高内聚。API类为PostEngine的Category分类，所有网络请求最终通过PostEngine发送请求。Response规范化网络返回数据结构，预处理一些可能存在的数据问题。一个接口对应一个API分类，业务中用到哪个接口调用哪个API分类，无需引入时带来过多与自己无关的其他接口。\n","source":"_posts/移动端工程结构总结.md","raw":"---\ntitle: 移动端工程结构总结\ndate: 2017-1-5 13:01:37\ntags: iOS\n---\n{% note info %}\n工作几年,对iOS开发工程目录结构的一些总结,个人认为面对中小型项目这样的目录分层是合理的.\n###### 优点\n这样划分,项目不会乱,配合代码规范可以提高项目可维护性,开发分工明确,可以应对常见的MVC,MVCS,MVP,MVVM等架构.\n###### 缺点\n划分的太细,有些类不太好分类,多人开发时需要提前订好规则,到底什么东西划分为哪类\n{% endnote %}\n\n##### 目录结构\n```\n|- Main\n    |- AppDelegate(程序入口)\n        |-AppDelegateService\n|-Classes(编码)\n    |-Module(模块)\n        |- Me(我的)\n        |- Home(首页)\n            |-View\n            |-Model\n            |-Controller\n            |-Api\n            |-Other\n        |-public(公用)\n    |-Expand(功能扩展)\n        |-3rdLib(三方库)\n        |-Tools(工具)\n        |-NetWork(网络工具)\n        |-DataBase(数据相关)\n        |-Macro(宏)\n        |-Manage(管理工具)\n|-Resources(资源)\n    |-图片资源\n    |-声音资源\n    |-文件资源\n\n```\n##### 网络层封装思路\n###### NetWorkTool\nPostEngine(请求引擎类)---------对请求的发送和响应结果进行处理\nResponse(响应类)-----------------封装了Http请求返回的数据结构\nAPI(接口类)--------------------------定义了接口方法\nAPIImpl(接口实现类)--------------实现接口方法。\n###### 设计思路\n低耦合，高内聚。API类为PostEngine的Category分类，所有网络请求最终通过PostEngine发送请求。Response规范化网络返回数据结构，预处理一些可能存在的数据问题。一个接口对应一个API分类，业务中用到哪个接口调用哪个API分类，无需引入时带来过多与自己无关的其他接口。\n","slug":"移动端工程结构总结","published":1,"updated":"2017-10-19T10:44:23.437Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8yck60y00040dxjj2e8espg","content":"<div class=\"note info\"><p>工作几年,对iOS开发工程目录结构的一些总结,个人认为面对中小型项目这样的目录分层是合理的.</p>\n<h6 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h6><p>这样划分,项目不会乱,配合代码规范可以提高项目可维护性,开发分工明确,可以应对常见的MVC,MVCS,MVP,MVVM等架构.</p>\n<h6 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h6><p>划分的太细,有些类不太好分类,多人开发时需要提前订好规则,到底什么东西划分为哪类</p></div>\n<h5 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">|- Main</div><div class=\"line\">    |- AppDelegate(程序入口)</div><div class=\"line\">        |-AppDelegateService</div><div class=\"line\">|-Classes(编码)</div><div class=\"line\">    |-Module(模块)</div><div class=\"line\">        |- Me(我的)</div><div class=\"line\">        |- Home(首页)</div><div class=\"line\">            |-View</div><div class=\"line\">            |-Model</div><div class=\"line\">            |-Controller</div><div class=\"line\">            |-Api</div><div class=\"line\">            |-Other</div><div class=\"line\">        |-public(公用)</div><div class=\"line\">    |-Expand(功能扩展)</div><div class=\"line\">        |-3rdLib(三方库)</div><div class=\"line\">        |-Tools(工具)</div><div class=\"line\">        |-NetWork(网络工具)</div><div class=\"line\">        |-DataBase(数据相关)</div><div class=\"line\">        |-Macro(宏)</div><div class=\"line\">        |-Manage(管理工具)</div><div class=\"line\">|-Resources(资源)</div><div class=\"line\">    |-图片资源</div><div class=\"line\">    |-声音资源</div><div class=\"line\">    |-文件资源</div></pre></td></tr></table></figure>\n<h5 id=\"网络层封装思路\"><a href=\"#网络层封装思路\" class=\"headerlink\" title=\"网络层封装思路\"></a>网络层封装思路</h5><h6 id=\"NetWorkTool\"><a href=\"#NetWorkTool\" class=\"headerlink\" title=\"NetWorkTool\"></a>NetWorkTool</h6><p>PostEngine(请求引擎类)———对请求的发送和响应结果进行处理<br>Response(响应类)—————–封装了Http请求返回的数据结构<br>API(接口类)————————–定义了接口方法<br>APIImpl(接口实现类)————–实现接口方法。</p>\n<h6 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h6><p>低耦合，高内聚。API类为PostEngine的Category分类，所有网络请求最终通过PostEngine发送请求。Response规范化网络返回数据结构，预处理一些可能存在的数据问题。一个接口对应一个API分类，业务中用到哪个接口调用哪个API分类，无需引入时带来过多与自己无关的其他接口。</p>\n","site":{"data":{}},"excerpt":"","more":"<div class=\"note info\"><p>工作几年,对iOS开发工程目录结构的一些总结,个人认为面对中小型项目这样的目录分层是合理的.</p>\n<h6 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h6><p>这样划分,项目不会乱,配合代码规范可以提高项目可维护性,开发分工明确,可以应对常见的MVC,MVCS,MVP,MVVM等架构.</p>\n<h6 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h6><p>划分的太细,有些类不太好分类,多人开发时需要提前订好规则,到底什么东西划分为哪类</p></div>\n<h5 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">|- Main</div><div class=\"line\">    |- AppDelegate(程序入口)</div><div class=\"line\">        |-AppDelegateService</div><div class=\"line\">|-Classes(编码)</div><div class=\"line\">    |-Module(模块)</div><div class=\"line\">        |- Me(我的)</div><div class=\"line\">        |- Home(首页)</div><div class=\"line\">            |-View</div><div class=\"line\">            |-Model</div><div class=\"line\">            |-Controller</div><div class=\"line\">            |-Api</div><div class=\"line\">            |-Other</div><div class=\"line\">        |-public(公用)</div><div class=\"line\">    |-Expand(功能扩展)</div><div class=\"line\">        |-3rdLib(三方库)</div><div class=\"line\">        |-Tools(工具)</div><div class=\"line\">        |-NetWork(网络工具)</div><div class=\"line\">        |-DataBase(数据相关)</div><div class=\"line\">        |-Macro(宏)</div><div class=\"line\">        |-Manage(管理工具)</div><div class=\"line\">|-Resources(资源)</div><div class=\"line\">    |-图片资源</div><div class=\"line\">    |-声音资源</div><div class=\"line\">    |-文件资源</div></pre></td></tr></table></figure>\n<h5 id=\"网络层封装思路\"><a href=\"#网络层封装思路\" class=\"headerlink\" title=\"网络层封装思路\"></a>网络层封装思路</h5><h6 id=\"NetWorkTool\"><a href=\"#NetWorkTool\" class=\"headerlink\" title=\"NetWorkTool\"></a>NetWorkTool</h6><p>PostEngine(请求引擎类)———对请求的发送和响应结果进行处理<br>Response(响应类)—————–封装了Http请求返回的数据结构<br>API(接口类)————————–定义了接口方法<br>APIImpl(接口实现类)————–实现接口方法。</p>\n<h6 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h6><p>低耦合，高内聚。API类为PostEngine的Category分类，所有网络请求最终通过PostEngine发送请求。Response规范化网络返回数据结构，预处理一些可能存在的数据问题。一个接口对应一个API分类，业务中用到哪个接口调用哪个API分类，无需引入时带来过多与自己无关的其他接口。</p>\n"},{"title":"给centOS安装锐速","date":"2016-12-25T03:53:56.000Z","_content":"> 最近鼓捣服务器玩脱了,导致ssh连不上,端口也没占用,防火墙也没开,就是不行,索性直接重装,正好趁这个机会把以前没有写下的东西记录下来\n\n## 什么是锐速\n锐速serverspeeder是一款TCP网络加速软件，能在Linux系统和Windows系统的服务器中安装，安装后能启到提高网络连接稳定性、带宽利用率、低访问失败率等作用，从而提高服务器网络访问速度。锐速并非实际增大服务器带宽，只是提高网络的稳定性和利用率而已。蜗牛在为服务器安装锐速后，测试服务器全球下载、本地上传下载速度变化不大；但使用超级ping发现，丢包现象明显减少。另外一个明显变化就是在同一VPS安装科学上网工具观看YouTube，没安装锐速前观看YouTube 720P视频非常不流畅，经常会出现缓冲现象；而安装锐速后能流畅观看YouTube 720P视频。\n\n## 安装锐速\n这里使用网上找到的脚本 直接copy以下命令\n```\n#如果没有安装wget下载工具,执行这一条进行安装\n$ yum -y install wget\n\n#下载脚本\n$ wget -N --no-check-certificate https://raw.githubusercontent.com/wn789/serverspeeder/master/serverspeeder.sh\n\n#执行脚本\n$ bash serverspeeder.sh\n```\n安装过程很简单，如果你的VPS内核支持安装，根本无需你手动操作，直接一键完成。\n\n如果你VPS内核没有找到匹配的锐速版本，会自动提示选择接近版本。\n\n当然你还肯会遇到内核不支持的情况，那么需要我们先手动更改可以匹配锐速的内核。目前此破解版锐速支持的内核有：\n* CentOS-6.8：2.6.32-642.el7.x86_64\n* CentOS-7.2：3.10.0-327.el7.x86_64\n* CentOS：4.4.0-x86_64-linode63\n* Ubuntu_14.04：4.2.0-35-generic\n* Debian_8：3.16.0-4-amd64。\n\n替换内核的方法请看下面:\n[为你的CentOS替换内核](#替换内核)\n\n\n### 锐速serverspeeder常用命令:\n```\nservice serverSpeeder start #启动\nservice serverSpeeder stop #停止\nservice serverSpeeder reload #重新加载配置\nservice serverSpeeder restart #重启\nservice serverSpeeder status #状态\nservice serverSpeeder stats #统计\nservice serverSpeeder renewLic #更新许可文件\nservice serverSpeeder update #更新\nchattr -i /serverspeeder/etc/apx* && /serverspeeder/bin/serverSpeeder.sh uninstall -f #卸载\n```\n<span id = \"替换内核\"></span>\n## 为你的CentOS替换内核\n\n#### 根据系统版本更换内核\n查看自己的系统版本\n\n```\nhead -n 1 /etc/issue\n```\n##### CentOS 6.8\n\nCentOS 6支持安装锐速的内核：\n2.6.32-504.3.3.el6.x86_64\n\n首先运行下面命令为自己的VPS下载安装内核。\n```\n#查看当前内核版本\nuname -r\n#下载内核\nwget http://ftp.scientificlinux.org/linux/scientific/6.6/x86_64/updates/security/kernel-2.6.32-504.3.3.el6.x86_64.rpm\n#安装内核\nrpm -ivh kernel-2.6.32-504.3.3.el6.x86_64.rpm --force\n```\n##### CentOS 7\n\n```\n#查看当前内核版本\nuname -r\n#下载内核\nwget http://ftp.scientificlinux.org/linux/scientific/7.0/x86_64/updates/security/kernel-3.10.0-327.el7.x86_64.rpm\n#安装内核\nrpm -ivh kernel-3.10.0-327.el7.x86_64.rpm --force\n\n```\n> 正常系统执行到这里就可以使用\"reboot\"命令重启,然后\"uname -r\"查看是否替换成功了,但是我的vps服务商是linode,原本没问题,这次更换内核发现,安装成功后怎么也无法默认启动这个内核,reboot之后还是原来的内核,如果你也有这样的问题,请接着下面的操作\n\n#### linode调整默认启动内核\nLinode 的机器全部用的是定制的内核,并且在控制台强制限制了机器默认启动的内核,所以需要做一些其他工作\n##### 更新系统\n```\n#更新系统,目前会更新到6.9\n$ yum install epel-release -y\n#更新yum\n$ yum update -y\n```\n##### 安装 grub 引导\n```\n$ yum install grub -y\n```\n##### 新建 menu.lst 引导文件\n先看看你机器安装的最新内核是什么\n```\n$ ls -l /boot\n```\n会显示一大堆东西\n```\n总用量 98992\n-rw-r--r--. 1 root root   106312 12月 16 2014 config-2.6.32-504.3.3.el6.x86_64\n-rw-r--r--. 1 root root   108108 2月  24 2017 config-2.6.32-642.15.1.el6.x86_64\n-rw-r--r--. 1 root root   108103 5月  10 2016 config-2.6.32-642.el6.x86_64\n-rw-r--r--. 1 root root   108169 10月  5 21:27 config-2.6.32-696.13.2.el6.x86_64\ndrwxr-xr-x. 3 root root     4096 3月   1 2017 efi\ndrwxr-xr-x. 2 root root     4096 10月 12 09:46 grub\n-rw-------. 1 root root 17532160 10月 12 09:43 initramfs-2.6.32-504.3.3.el6.x86_64.img\n\n```\n显而易见我们要的是2.6.32-504.3.3.el6.x86_64的内核\n\n输入命令\n```\n$ nano /boot/grub/menu.lst\n```\n然后按照下面的格式填写menu.lst中的内容模版,每行的版本号替换成你系统安装的内核版本\n```\ndefault 0\ntimeout 5\n\ntitle CentOS 2.6.32-504.3.3.el6.x86_64\n\nroot (hd0)\n\nkernel /boot/vmlinuz2.6.32-504.3.3.el6.x86_64 root=/dev/sda\n\ninitrd /boot/initramfs-2.6.32-504.3.3.el6.x86_64.img\n```\n如果文件已存在,有多个title时,说明你有安装多个内核,找到对应可用的内核,或者新添加一个,将default改为你需要的顺序即可,default的意思是系统默认启动第几个title\n##### Linode 控制面板修改启动方式\n对应 VPS 的系统盘 Edit 下的 Kernel 选择 【GRUB(Legacy)】保存后，Reboot\n##### 启动后，验证内核\n```\n$ uname -a\n```\n\n执行命令“rpm -qa | grep kernel”，查看内核是否安装成功。如果显示你安装的内核版本，表示安装成功。\n```\nrpm -qa | grep kernel\n```\n\n重启VPS，查看内核是否修改成功。\n```\nreboot #重启VPS\nuname -r #当前使用内核版本\n```\n","source":"_posts/给centOS安装锐速.md","raw":"---\ntitle: 给centOS安装锐速\ndate: 2016-12-25 11:53:56\ntags: ss,vps\n---\n> 最近鼓捣服务器玩脱了,导致ssh连不上,端口也没占用,防火墙也没开,就是不行,索性直接重装,正好趁这个机会把以前没有写下的东西记录下来\n\n## 什么是锐速\n锐速serverspeeder是一款TCP网络加速软件，能在Linux系统和Windows系统的服务器中安装，安装后能启到提高网络连接稳定性、带宽利用率、低访问失败率等作用，从而提高服务器网络访问速度。锐速并非实际增大服务器带宽，只是提高网络的稳定性和利用率而已。蜗牛在为服务器安装锐速后，测试服务器全球下载、本地上传下载速度变化不大；但使用超级ping发现，丢包现象明显减少。另外一个明显变化就是在同一VPS安装科学上网工具观看YouTube，没安装锐速前观看YouTube 720P视频非常不流畅，经常会出现缓冲现象；而安装锐速后能流畅观看YouTube 720P视频。\n\n## 安装锐速\n这里使用网上找到的脚本 直接copy以下命令\n```\n#如果没有安装wget下载工具,执行这一条进行安装\n$ yum -y install wget\n\n#下载脚本\n$ wget -N --no-check-certificate https://raw.githubusercontent.com/wn789/serverspeeder/master/serverspeeder.sh\n\n#执行脚本\n$ bash serverspeeder.sh\n```\n安装过程很简单，如果你的VPS内核支持安装，根本无需你手动操作，直接一键完成。\n\n如果你VPS内核没有找到匹配的锐速版本，会自动提示选择接近版本。\n\n当然你还肯会遇到内核不支持的情况，那么需要我们先手动更改可以匹配锐速的内核。目前此破解版锐速支持的内核有：\n* CentOS-6.8：2.6.32-642.el7.x86_64\n* CentOS-7.2：3.10.0-327.el7.x86_64\n* CentOS：4.4.0-x86_64-linode63\n* Ubuntu_14.04：4.2.0-35-generic\n* Debian_8：3.16.0-4-amd64。\n\n替换内核的方法请看下面:\n[为你的CentOS替换内核](#替换内核)\n\n\n### 锐速serverspeeder常用命令:\n```\nservice serverSpeeder start #启动\nservice serverSpeeder stop #停止\nservice serverSpeeder reload #重新加载配置\nservice serverSpeeder restart #重启\nservice serverSpeeder status #状态\nservice serverSpeeder stats #统计\nservice serverSpeeder renewLic #更新许可文件\nservice serverSpeeder update #更新\nchattr -i /serverspeeder/etc/apx* && /serverspeeder/bin/serverSpeeder.sh uninstall -f #卸载\n```\n<span id = \"替换内核\"></span>\n## 为你的CentOS替换内核\n\n#### 根据系统版本更换内核\n查看自己的系统版本\n\n```\nhead -n 1 /etc/issue\n```\n##### CentOS 6.8\n\nCentOS 6支持安装锐速的内核：\n2.6.32-504.3.3.el6.x86_64\n\n首先运行下面命令为自己的VPS下载安装内核。\n```\n#查看当前内核版本\nuname -r\n#下载内核\nwget http://ftp.scientificlinux.org/linux/scientific/6.6/x86_64/updates/security/kernel-2.6.32-504.3.3.el6.x86_64.rpm\n#安装内核\nrpm -ivh kernel-2.6.32-504.3.3.el6.x86_64.rpm --force\n```\n##### CentOS 7\n\n```\n#查看当前内核版本\nuname -r\n#下载内核\nwget http://ftp.scientificlinux.org/linux/scientific/7.0/x86_64/updates/security/kernel-3.10.0-327.el7.x86_64.rpm\n#安装内核\nrpm -ivh kernel-3.10.0-327.el7.x86_64.rpm --force\n\n```\n> 正常系统执行到这里就可以使用\"reboot\"命令重启,然后\"uname -r\"查看是否替换成功了,但是我的vps服务商是linode,原本没问题,这次更换内核发现,安装成功后怎么也无法默认启动这个内核,reboot之后还是原来的内核,如果你也有这样的问题,请接着下面的操作\n\n#### linode调整默认启动内核\nLinode 的机器全部用的是定制的内核,并且在控制台强制限制了机器默认启动的内核,所以需要做一些其他工作\n##### 更新系统\n```\n#更新系统,目前会更新到6.9\n$ yum install epel-release -y\n#更新yum\n$ yum update -y\n```\n##### 安装 grub 引导\n```\n$ yum install grub -y\n```\n##### 新建 menu.lst 引导文件\n先看看你机器安装的最新内核是什么\n```\n$ ls -l /boot\n```\n会显示一大堆东西\n```\n总用量 98992\n-rw-r--r--. 1 root root   106312 12月 16 2014 config-2.6.32-504.3.3.el6.x86_64\n-rw-r--r--. 1 root root   108108 2月  24 2017 config-2.6.32-642.15.1.el6.x86_64\n-rw-r--r--. 1 root root   108103 5月  10 2016 config-2.6.32-642.el6.x86_64\n-rw-r--r--. 1 root root   108169 10月  5 21:27 config-2.6.32-696.13.2.el6.x86_64\ndrwxr-xr-x. 3 root root     4096 3月   1 2017 efi\ndrwxr-xr-x. 2 root root     4096 10月 12 09:46 grub\n-rw-------. 1 root root 17532160 10月 12 09:43 initramfs-2.6.32-504.3.3.el6.x86_64.img\n\n```\n显而易见我们要的是2.6.32-504.3.3.el6.x86_64的内核\n\n输入命令\n```\n$ nano /boot/grub/menu.lst\n```\n然后按照下面的格式填写menu.lst中的内容模版,每行的版本号替换成你系统安装的内核版本\n```\ndefault 0\ntimeout 5\n\ntitle CentOS 2.6.32-504.3.3.el6.x86_64\n\nroot (hd0)\n\nkernel /boot/vmlinuz2.6.32-504.3.3.el6.x86_64 root=/dev/sda\n\ninitrd /boot/initramfs-2.6.32-504.3.3.el6.x86_64.img\n```\n如果文件已存在,有多个title时,说明你有安装多个内核,找到对应可用的内核,或者新添加一个,将default改为你需要的顺序即可,default的意思是系统默认启动第几个title\n##### Linode 控制面板修改启动方式\n对应 VPS 的系统盘 Edit 下的 Kernel 选择 【GRUB(Legacy)】保存后，Reboot\n##### 启动后，验证内核\n```\n$ uname -a\n```\n\n执行命令“rpm -qa | grep kernel”，查看内核是否安装成功。如果显示你安装的内核版本，表示安装成功。\n```\nrpm -qa | grep kernel\n```\n\n重启VPS，查看内核是否修改成功。\n```\nreboot #重启VPS\nuname -r #当前使用内核版本\n```\n","slug":"给centOS安装锐速","published":1,"updated":"2017-10-19T10:44:23.437Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8yck60z00050dxjl0holrmr","content":"<blockquote>\n<p>最近鼓捣服务器玩脱了,导致ssh连不上,端口也没占用,防火墙也没开,就是不行,索性直接重装,正好趁这个机会把以前没有写下的东西记录下来</p>\n</blockquote>\n<h2 id=\"什么是锐速\"><a href=\"#什么是锐速\" class=\"headerlink\" title=\"什么是锐速\"></a>什么是锐速</h2><p>锐速serverspeeder是一款TCP网络加速软件，能在Linux系统和Windows系统的服务器中安装，安装后能启到提高网络连接稳定性、带宽利用率、低访问失败率等作用，从而提高服务器网络访问速度。锐速并非实际增大服务器带宽，只是提高网络的稳定性和利用率而已。蜗牛在为服务器安装锐速后，测试服务器全球下载、本地上传下载速度变化不大；但使用超级ping发现，丢包现象明显减少。另外一个明显变化就是在同一VPS安装科学上网工具观看YouTube，没安装锐速前观看YouTube 720P视频非常不流畅，经常会出现缓冲现象；而安装锐速后能流畅观看YouTube 720P视频。</p>\n<h2 id=\"安装锐速\"><a href=\"#安装锐速\" class=\"headerlink\" title=\"安装锐速\"></a>安装锐速</h2><p>这里使用网上找到的脚本 直接copy以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#如果没有安装wget下载工具,执行这一条进行安装</div><div class=\"line\">$ yum -y install wget</div><div class=\"line\"></div><div class=\"line\">#下载脚本</div><div class=\"line\">$ wget -N --no-check-certificate https://raw.githubusercontent.com/wn789/serverspeeder/master/serverspeeder.sh</div><div class=\"line\"></div><div class=\"line\">#执行脚本</div><div class=\"line\">$ bash serverspeeder.sh</div></pre></td></tr></table></figure></p>\n<p>安装过程很简单，如果你的VPS内核支持安装，根本无需你手动操作，直接一键完成。</p>\n<p>如果你VPS内核没有找到匹配的锐速版本，会自动提示选择接近版本。</p>\n<p>当然你还肯会遇到内核不支持的情况，那么需要我们先手动更改可以匹配锐速的内核。目前此破解版锐速支持的内核有：</p>\n<ul>\n<li>CentOS-6.8：2.6.32-642.el7.x86_64</li>\n<li>CentOS-7.2：3.10.0-327.el7.x86_64</li>\n<li>CentOS：4.4.0-x86_64-linode63</li>\n<li>Ubuntu_14.04：4.2.0-35-generic</li>\n<li>Debian_8：3.16.0-4-amd64。</li>\n</ul>\n<p>替换内核的方法请看下面:<br><a href=\"#替换内核\">为你的CentOS替换内核</a></p>\n<h3 id=\"锐速serverspeeder常用命令\"><a href=\"#锐速serverspeeder常用命令\" class=\"headerlink\" title=\"锐速serverspeeder常用命令:\"></a>锐速serverspeeder常用命令:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">service serverSpeeder start #启动</div><div class=\"line\">service serverSpeeder stop #停止</div><div class=\"line\">service serverSpeeder reload #重新加载配置</div><div class=\"line\">service serverSpeeder restart #重启</div><div class=\"line\">service serverSpeeder status #状态</div><div class=\"line\">service serverSpeeder stats #统计</div><div class=\"line\">service serverSpeeder renewLic #更新许可文件</div><div class=\"line\">service serverSpeeder update #更新</div><div class=\"line\">chattr -i /serverspeeder/etc/apx* &amp;&amp; /serverspeeder/bin/serverSpeeder.sh uninstall -f #卸载</div></pre></td></tr></table></figure>\n<p><span id=\"替换内核\"></span></p>\n<h2 id=\"为你的CentOS替换内核\"><a href=\"#为你的CentOS替换内核\" class=\"headerlink\" title=\"为你的CentOS替换内核\"></a>为你的CentOS替换内核</h2><h4 id=\"根据系统版本更换内核\"><a href=\"#根据系统版本更换内核\" class=\"headerlink\" title=\"根据系统版本更换内核\"></a>根据系统版本更换内核</h4><p>查看自己的系统版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">head -n 1 /etc/issue</div></pre></td></tr></table></figure>\n<h5 id=\"CentOS-6-8\"><a href=\"#CentOS-6-8\" class=\"headerlink\" title=\"CentOS 6.8\"></a>CentOS 6.8</h5><p>CentOS 6支持安装锐速的内核：<br>2.6.32-504.3.3.el6.x86_64</p>\n<p>首先运行下面命令为自己的VPS下载安装内核。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#查看当前内核版本</div><div class=\"line\">uname -r</div><div class=\"line\">#下载内核</div><div class=\"line\">wget http://ftp.scientificlinux.org/linux/scientific/6.6/x86_64/updates/security/kernel-2.6.32-504.3.3.el6.x86_64.rpm</div><div class=\"line\">#安装内核</div><div class=\"line\">rpm -ivh kernel-2.6.32-504.3.3.el6.x86_64.rpm --force</div></pre></td></tr></table></figure></p>\n<h5 id=\"CentOS-7\"><a href=\"#CentOS-7\" class=\"headerlink\" title=\"CentOS 7\"></a>CentOS 7</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#查看当前内核版本</div><div class=\"line\">uname -r</div><div class=\"line\">#下载内核</div><div class=\"line\">wget http://ftp.scientificlinux.org/linux/scientific/7.0/x86_64/updates/security/kernel-3.10.0-327.el7.x86_64.rpm</div><div class=\"line\">#安装内核</div><div class=\"line\">rpm -ivh kernel-3.10.0-327.el7.x86_64.rpm --force</div></pre></td></tr></table></figure>\n<blockquote>\n<p>正常系统执行到这里就可以使用”reboot”命令重启,然后”uname -r”查看是否替换成功了,但是我的vps服务商是linode,原本没问题,这次更换内核发现,安装成功后怎么也无法默认启动这个内核,reboot之后还是原来的内核,如果你也有这样的问题,请接着下面的操作</p>\n</blockquote>\n<h4 id=\"linode调整默认启动内核\"><a href=\"#linode调整默认启动内核\" class=\"headerlink\" title=\"linode调整默认启动内核\"></a>linode调整默认启动内核</h4><p>Linode 的机器全部用的是定制的内核,并且在控制台强制限制了机器默认启动的内核,所以需要做一些其他工作</p>\n<h5 id=\"更新系统\"><a href=\"#更新系统\" class=\"headerlink\" title=\"更新系统\"></a>更新系统</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#更新系统,目前会更新到6.9</div><div class=\"line\">$ yum install epel-release -y</div><div class=\"line\">#更新yum</div><div class=\"line\">$ yum update -y</div></pre></td></tr></table></figure>\n<h5 id=\"安装-grub-引导\"><a href=\"#安装-grub-引导\" class=\"headerlink\" title=\"安装 grub 引导\"></a>安装 grub 引导</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ yum install grub -y</div></pre></td></tr></table></figure>\n<h5 id=\"新建-menu-lst-引导文件\"><a href=\"#新建-menu-lst-引导文件\" class=\"headerlink\" title=\"新建 menu.lst 引导文件\"></a>新建 menu.lst 引导文件</h5><p>先看看你机器安装的最新内核是什么<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ls -l /boot</div></pre></td></tr></table></figure></p>\n<p>会显示一大堆东西<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">总用量 98992</div><div class=\"line\">-rw-r--r--. 1 root root   106312 12月 16 2014 config-2.6.32-504.3.3.el6.x86_64</div><div class=\"line\">-rw-r--r--. 1 root root   108108 2月  24 2017 config-2.6.32-642.15.1.el6.x86_64</div><div class=\"line\">-rw-r--r--. 1 root root   108103 5月  10 2016 config-2.6.32-642.el6.x86_64</div><div class=\"line\">-rw-r--r--. 1 root root   108169 10月  5 21:27 config-2.6.32-696.13.2.el6.x86_64</div><div class=\"line\">drwxr-xr-x. 3 root root     4096 3月   1 2017 efi</div><div class=\"line\">drwxr-xr-x. 2 root root     4096 10月 12 09:46 grub</div><div class=\"line\">-rw-------. 1 root root 17532160 10月 12 09:43 initramfs-2.6.32-504.3.3.el6.x86_64.img</div></pre></td></tr></table></figure></p>\n<p>显而易见我们要的是2.6.32-504.3.3.el6.x86_64的内核</p>\n<p>输入命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nano /boot/grub/menu.lst</div></pre></td></tr></table></figure></p>\n<p>然后按照下面的格式填写menu.lst中的内容模版,每行的版本号替换成你系统安装的内核版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">default 0</div><div class=\"line\">timeout 5</div><div class=\"line\"></div><div class=\"line\">title CentOS 2.6.32-504.3.3.el6.x86_64</div><div class=\"line\"></div><div class=\"line\">root (hd0)</div><div class=\"line\"></div><div class=\"line\">kernel /boot/vmlinuz2.6.32-504.3.3.el6.x86_64 root=/dev/sda</div><div class=\"line\"></div><div class=\"line\">initrd /boot/initramfs-2.6.32-504.3.3.el6.x86_64.img</div></pre></td></tr></table></figure></p>\n<p>如果文件已存在,有多个title时,说明你有安装多个内核,找到对应可用的内核,或者新添加一个,将default改为你需要的顺序即可,default的意思是系统默认启动第几个title</p>\n<h5 id=\"Linode-控制面板修改启动方式\"><a href=\"#Linode-控制面板修改启动方式\" class=\"headerlink\" title=\"Linode 控制面板修改启动方式\"></a>Linode 控制面板修改启动方式</h5><p>对应 VPS 的系统盘 Edit 下的 Kernel 选择 【GRUB(Legacy)】保存后，Reboot</p>\n<h5 id=\"启动后，验证内核\"><a href=\"#启动后，验证内核\" class=\"headerlink\" title=\"启动后，验证内核\"></a>启动后，验证内核</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ uname -a</div></pre></td></tr></table></figure>\n<p>执行命令“rpm -qa | grep kernel”，查看内核是否安装成功。如果显示你安装的内核版本，表示安装成功。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rpm -qa | grep kernel</div></pre></td></tr></table></figure></p>\n<p>重启VPS，查看内核是否修改成功。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">reboot #重启VPS</div><div class=\"line\">uname -r #当前使用内核版本</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>最近鼓捣服务器玩脱了,导致ssh连不上,端口也没占用,防火墙也没开,就是不行,索性直接重装,正好趁这个机会把以前没有写下的东西记录下来</p>\n</blockquote>\n<h2 id=\"什么是锐速\"><a href=\"#什么是锐速\" class=\"headerlink\" title=\"什么是锐速\"></a>什么是锐速</h2><p>锐速serverspeeder是一款TCP网络加速软件，能在Linux系统和Windows系统的服务器中安装，安装后能启到提高网络连接稳定性、带宽利用率、低访问失败率等作用，从而提高服务器网络访问速度。锐速并非实际增大服务器带宽，只是提高网络的稳定性和利用率而已。蜗牛在为服务器安装锐速后，测试服务器全球下载、本地上传下载速度变化不大；但使用超级ping发现，丢包现象明显减少。另外一个明显变化就是在同一VPS安装科学上网工具观看YouTube，没安装锐速前观看YouTube 720P视频非常不流畅，经常会出现缓冲现象；而安装锐速后能流畅观看YouTube 720P视频。</p>\n<h2 id=\"安装锐速\"><a href=\"#安装锐速\" class=\"headerlink\" title=\"安装锐速\"></a>安装锐速</h2><p>这里使用网上找到的脚本 直接copy以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#如果没有安装wget下载工具,执行这一条进行安装</div><div class=\"line\">$ yum -y install wget</div><div class=\"line\"></div><div class=\"line\">#下载脚本</div><div class=\"line\">$ wget -N --no-check-certificate https://raw.githubusercontent.com/wn789/serverspeeder/master/serverspeeder.sh</div><div class=\"line\"></div><div class=\"line\">#执行脚本</div><div class=\"line\">$ bash serverspeeder.sh</div></pre></td></tr></table></figure></p>\n<p>安装过程很简单，如果你的VPS内核支持安装，根本无需你手动操作，直接一键完成。</p>\n<p>如果你VPS内核没有找到匹配的锐速版本，会自动提示选择接近版本。</p>\n<p>当然你还肯会遇到内核不支持的情况，那么需要我们先手动更改可以匹配锐速的内核。目前此破解版锐速支持的内核有：</p>\n<ul>\n<li>CentOS-6.8：2.6.32-642.el7.x86_64</li>\n<li>CentOS-7.2：3.10.0-327.el7.x86_64</li>\n<li>CentOS：4.4.0-x86_64-linode63</li>\n<li>Ubuntu_14.04：4.2.0-35-generic</li>\n<li>Debian_8：3.16.0-4-amd64。</li>\n</ul>\n<p>替换内核的方法请看下面:<br><a href=\"#替换内核\">为你的CentOS替换内核</a></p>\n<h3 id=\"锐速serverspeeder常用命令\"><a href=\"#锐速serverspeeder常用命令\" class=\"headerlink\" title=\"锐速serverspeeder常用命令:\"></a>锐速serverspeeder常用命令:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">service serverSpeeder start #启动</div><div class=\"line\">service serverSpeeder stop #停止</div><div class=\"line\">service serverSpeeder reload #重新加载配置</div><div class=\"line\">service serverSpeeder restart #重启</div><div class=\"line\">service serverSpeeder status #状态</div><div class=\"line\">service serverSpeeder stats #统计</div><div class=\"line\">service serverSpeeder renewLic #更新许可文件</div><div class=\"line\">service serverSpeeder update #更新</div><div class=\"line\">chattr -i /serverspeeder/etc/apx* &amp;&amp; /serverspeeder/bin/serverSpeeder.sh uninstall -f #卸载</div></pre></td></tr></table></figure>\n<p><span id=\"替换内核\"></span></p>\n<h2 id=\"为你的CentOS替换内核\"><a href=\"#为你的CentOS替换内核\" class=\"headerlink\" title=\"为你的CentOS替换内核\"></a>为你的CentOS替换内核</h2><h4 id=\"根据系统版本更换内核\"><a href=\"#根据系统版本更换内核\" class=\"headerlink\" title=\"根据系统版本更换内核\"></a>根据系统版本更换内核</h4><p>查看自己的系统版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">head -n 1 /etc/issue</div></pre></td></tr></table></figure>\n<h5 id=\"CentOS-6-8\"><a href=\"#CentOS-6-8\" class=\"headerlink\" title=\"CentOS 6.8\"></a>CentOS 6.8</h5><p>CentOS 6支持安装锐速的内核：<br>2.6.32-504.3.3.el6.x86_64</p>\n<p>首先运行下面命令为自己的VPS下载安装内核。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#查看当前内核版本</div><div class=\"line\">uname -r</div><div class=\"line\">#下载内核</div><div class=\"line\">wget http://ftp.scientificlinux.org/linux/scientific/6.6/x86_64/updates/security/kernel-2.6.32-504.3.3.el6.x86_64.rpm</div><div class=\"line\">#安装内核</div><div class=\"line\">rpm -ivh kernel-2.6.32-504.3.3.el6.x86_64.rpm --force</div></pre></td></tr></table></figure></p>\n<h5 id=\"CentOS-7\"><a href=\"#CentOS-7\" class=\"headerlink\" title=\"CentOS 7\"></a>CentOS 7</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#查看当前内核版本</div><div class=\"line\">uname -r</div><div class=\"line\">#下载内核</div><div class=\"line\">wget http://ftp.scientificlinux.org/linux/scientific/7.0/x86_64/updates/security/kernel-3.10.0-327.el7.x86_64.rpm</div><div class=\"line\">#安装内核</div><div class=\"line\">rpm -ivh kernel-3.10.0-327.el7.x86_64.rpm --force</div></pre></td></tr></table></figure>\n<blockquote>\n<p>正常系统执行到这里就可以使用”reboot”命令重启,然后”uname -r”查看是否替换成功了,但是我的vps服务商是linode,原本没问题,这次更换内核发现,安装成功后怎么也无法默认启动这个内核,reboot之后还是原来的内核,如果你也有这样的问题,请接着下面的操作</p>\n</blockquote>\n<h4 id=\"linode调整默认启动内核\"><a href=\"#linode调整默认启动内核\" class=\"headerlink\" title=\"linode调整默认启动内核\"></a>linode调整默认启动内核</h4><p>Linode 的机器全部用的是定制的内核,并且在控制台强制限制了机器默认启动的内核,所以需要做一些其他工作</p>\n<h5 id=\"更新系统\"><a href=\"#更新系统\" class=\"headerlink\" title=\"更新系统\"></a>更新系统</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#更新系统,目前会更新到6.9</div><div class=\"line\">$ yum install epel-release -y</div><div class=\"line\">#更新yum</div><div class=\"line\">$ yum update -y</div></pre></td></tr></table></figure>\n<h5 id=\"安装-grub-引导\"><a href=\"#安装-grub-引导\" class=\"headerlink\" title=\"安装 grub 引导\"></a>安装 grub 引导</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ yum install grub -y</div></pre></td></tr></table></figure>\n<h5 id=\"新建-menu-lst-引导文件\"><a href=\"#新建-menu-lst-引导文件\" class=\"headerlink\" title=\"新建 menu.lst 引导文件\"></a>新建 menu.lst 引导文件</h5><p>先看看你机器安装的最新内核是什么<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ls -l /boot</div></pre></td></tr></table></figure></p>\n<p>会显示一大堆东西<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">总用量 98992</div><div class=\"line\">-rw-r--r--. 1 root root   106312 12月 16 2014 config-2.6.32-504.3.3.el6.x86_64</div><div class=\"line\">-rw-r--r--. 1 root root   108108 2月  24 2017 config-2.6.32-642.15.1.el6.x86_64</div><div class=\"line\">-rw-r--r--. 1 root root   108103 5月  10 2016 config-2.6.32-642.el6.x86_64</div><div class=\"line\">-rw-r--r--. 1 root root   108169 10月  5 21:27 config-2.6.32-696.13.2.el6.x86_64</div><div class=\"line\">drwxr-xr-x. 3 root root     4096 3月   1 2017 efi</div><div class=\"line\">drwxr-xr-x. 2 root root     4096 10月 12 09:46 grub</div><div class=\"line\">-rw-------. 1 root root 17532160 10月 12 09:43 initramfs-2.6.32-504.3.3.el6.x86_64.img</div></pre></td></tr></table></figure></p>\n<p>显而易见我们要的是2.6.32-504.3.3.el6.x86_64的内核</p>\n<p>输入命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nano /boot/grub/menu.lst</div></pre></td></tr></table></figure></p>\n<p>然后按照下面的格式填写menu.lst中的内容模版,每行的版本号替换成你系统安装的内核版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">default 0</div><div class=\"line\">timeout 5</div><div class=\"line\"></div><div class=\"line\">title CentOS 2.6.32-504.3.3.el6.x86_64</div><div class=\"line\"></div><div class=\"line\">root (hd0)</div><div class=\"line\"></div><div class=\"line\">kernel /boot/vmlinuz2.6.32-504.3.3.el6.x86_64 root=/dev/sda</div><div class=\"line\"></div><div class=\"line\">initrd /boot/initramfs-2.6.32-504.3.3.el6.x86_64.img</div></pre></td></tr></table></figure></p>\n<p>如果文件已存在,有多个title时,说明你有安装多个内核,找到对应可用的内核,或者新添加一个,将default改为你需要的顺序即可,default的意思是系统默认启动第几个title</p>\n<h5 id=\"Linode-控制面板修改启动方式\"><a href=\"#Linode-控制面板修改启动方式\" class=\"headerlink\" title=\"Linode 控制面板修改启动方式\"></a>Linode 控制面板修改启动方式</h5><p>对应 VPS 的系统盘 Edit 下的 Kernel 选择 【GRUB(Legacy)】保存后，Reboot</p>\n<h5 id=\"启动后，验证内核\"><a href=\"#启动后，验证内核\" class=\"headerlink\" title=\"启动后，验证内核\"></a>启动后，验证内核</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ uname -a</div></pre></td></tr></table></figure>\n<p>执行命令“rpm -qa | grep kernel”，查看内核是否安装成功。如果显示你安装的内核版本，表示安装成功。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rpm -qa | grep kernel</div></pre></td></tr></table></figure></p>\n<p>重启VPS，查看内核是否修改成功。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">reboot #重启VPS</div><div class=\"line\">uname -r #当前使用内核版本</div></pre></td></tr></table></figure></p>\n"},{"title":"程序员必备的翻墙姿势+ss搭建vps服务器","date":"2016-12-21T08:28:11.000Z","_content":"### 程序员需要一个自由的互联网！！！\n{% note info %} 其实除了下面描述的vps搭建方法，如果不差钱想要搭建vps服务器，可以去阿里云租个香港服务器最低配置就可以，大概1.2K一年，流量不要买固定的带宽，按量付费，速度选最快，充100块能用超久，速度飞起  {% endnote %}\n\n#### 翻墙的几种手段\n这里就不介绍，修改Hosts、蓝灯、GoAgent、Tor等方式了\n\n##### VPN\nVPN其实就是把你整个网关出口跟远端服务器之间建立一个隧道，你的所有的出口数据都会经过VPN服务器进行转发。\n##### 优点:\n全局代理，配置简单。\n##### 缺点:\n缺点也很明显，无差别代理，访问国内网站，相当于先跳转到国外，再访问国内网站，速度可想而知。\n\n网上可以找到各种免费的VPN代理，也有收费。这里推荐GreenVPN，注册之后可以有免费的VPN用，也可以付费。（PS，网上各种假冒网站，注意甄别！）\n\n具体如何使用，这里就不过多介绍了，\n\n总结：VPN适合需要系统全局翻墙，并且是按需使用的方式。\n\n#### Shadowdsocks\n##### Shadowdsocks介绍(摘自维基百科)\nshadowsocks是一种基于Socks5代理方式的网络数据加密传输包，并采用Apache许可证、GPL、MIT许可证等多种自由软件许可协议开放源代码。shadowsocks分为服务器端和客户端，在使用之前，需要先将服务器端部署到服务器上面，然后通过客户端连接并创建本地代理。目前包使用Python、C、C++、C#、Go语言等编程语言开发。\n\n在中国大陆，本工具也被广泛用于突破防火长城（GFW），以浏览被封锁、屏蔽或干扰的内容。2015年8月22日，Shadowsocks原作者Clowwindy称受到了中国政府的压力，宣布停止维护此计划（项目）并移除其个人页面所存储的源代码。因为移除之前就有大量的复制副本，所以事实上并未停止维护，而是转由其他贡献者们持续维护中。\n##### Shadowsocks的优劣：\n##### 优势:\n安全。所有数据流量全部经过加密，加密算法可选并支持自定义算法。另外，远程DNS解析也使得本地的ISP无法通过DNS查询获取你所访问的网站。\n\n速度相对较快。由于其隐蔽性，只会有很少的数据包会被GFW丢弃，从而保证了连接速度。\n\n客户端配置简单。配置时只需要填写IP /域名、端口号，密码，然后选择加密方式即可。\n\n智能切换。 传统的VPN方式，在切换网络时非常不方便， 比如连上国外的 VPN 之后会发现访问国内的网站速度严重下降。ShadowSocks支持PAC列表，根据PAC中的规则，有针对性地选用恰当的网络访问方式，兼顾了访问速度与访问效率。移动客户端还支持针对不同应用设置单独代理。\n\n代码开源。不像某些蜜罐式的翻墙工具，开源的代码保证了无后门，从而为上网的隐私性与安全性提供保障。\n\n跨平台。支持主流系统包括Windows，Linux，Mac，Android,IOS，都有对应的客户端支持。\n\n##### 劣势:\n技术成本。若自己搭建ShadowSocks服务，需要一定的技术成本。因为大部分服务端是基于运行Linux的VPS（虚拟主机）搭建，因此需要学会使用putty等远程管理工具的使用方法，并掌握一定的Linux基本命令行操作。\n\n金钱成本。租用国外的服务器，需要价格不菲的费用。 若使用免费ShadowSocks账号，可能有一定的安全成本。有一些人会将自己的ShadowSocks节点免费分享出来，这些人是非常值得肯定和称赞的！但是其中有一小部分人别有居心，例如在ShadowSocks的服务器端监听网络流量，进行中间人攻击等，这类钓鱼服务器会严重损害用户的个人信息安全。 若购买收费的ShadowSocks账号， 需要一定的金钱成本 由于很多ShadowSocks卖家都是以盈利为目的，需要花费一定的费用。 那么，自己想要有一个影梭账号的话，到底是选用哪种比较好呢？可以看到网上很多卖ShadowSocks账号的，有的价格很便宜，比自己搭服务器划算多了，是不是直接购买一个账号比较好呢？ 在这里我建议大家自己搭服务器\n\n上面介绍的优势，就是我推荐大家使用的理由，而劣势就是写文章的缘由。\n\n#### 关于VPN\n虽然Shadowdsocks很好用，但是有的时候，总会碰到一个先有鸡还是有蛋的情况，你要配置Shadowdsocks，但是需要先翻墙，所以为了避免这种情况，最好还有备一个VPN还是有必要的。\n\n#### 使用和配置Shadowdsocks客户端\n> 由于iOS系统安全性，需要越狱才能安装Shadowdsocks，如果你已经越狱，你可以自行编译安装，源码\n##### iOS不越狱客户端推荐（以下软件使用了iOS9系统的新特性，也就是话说仅支持iOS9+）\n\n如果搜不到,可以使用境外AppStoreID搜索下载客户端.\n\nSurge:强烈推荐，虽然价格偏高，但是使用体验最好\n\nShadowrocket：价格便宜，买不起上面的，就买这个吧\n\npotatso:价格比上面贵一些，但是代码开源,有能力的可以自己编译安装。\n\nAndroid(Google Play) Shadowsocks\n\nps.不想花钱的,可以试试PP助手之类的软件安装.\n\n##### 客户端使用\n\n这里只介绍MAC系统使用，如果已经有了Shadowsocks帐号：\n\n服务器设定 ->IP、端口、加密、密码，一一对应填写。\n\n测试服务器是否配置成功：\n\n勾选配置好的服务器，选择全局模式，然后打开Google,如果可以就进行下一步。\n\n如果打不开，检查填写有误，检查是否使用了默认的443端口，是否开启了其它代理。\n##### 更新 PAC\n关于PAC介绍可以搜一下这篇文章：SS软件中的pac自动代理模式是什么？\n\nMac版的ss客户端已经停滞更新，官方版本一直停滞在2.6.3。所以，gfwlist地址的改变，直接导致了PAC无法更新了。解决方法有两种，你任选一种吧。\n\n方法A：\n直接改用民间大神修改的2.6.5版本即可，Releases版本：ShadowsocksX-2.6.5[https://github.com/RobertYan/ShadowsocksX/releases](https://github.com/RobertYan/ShadowsocksX/releases)\n\n方法B：\n如果不信任其他人修改的版本，你可以使用这个脚本更新PAC[https://gist.github.com/VincentSit/b5b112d273513f153caf23a9da112b3a](https://gist.github.com/VincentSit/b5b112d273513f153caf23a9da112b3a)\n测试 PAC 是否生效，选择自动模式代理，再次打开Google，如果可以打开，说明配置成功。\n\n##### 配置Shadowdsocks服务器\n这里只介绍，购买VPS服务器，来搭建Shadowdsocks服务端。不讨论购买现成的帐号。\n\n###### 服务器选择一：搬瓦工bandwagonhost\n关键字：价格低、一键配置、支付宝\n价格：$2.99/月，也会有$3.99一年的特价机器,。\n\n服务器购买注意：买价格最便宜的就可以了，优先：洛杉矶和佛罗里达（也可以随时切换）,电信用户不支持搬瓦工,如果是电信不用考虑了\n\n###### 服务器选择二：Vultr\n\n关键字：配置高，可做服务器、速度快\n\n价格：$5/月\n\n服务器购买注意：必须选择日本VPS！！\n\n注意：由于Vultr没有一键配置选项，所以需要手动配置，但是网上已经有人给出一键安装的脚本：Shadowsocks Python版一键安装脚本\n\n###### 服务器选择三：Linode\n关键字：本人使用,配置高，可做服务器、速度快\n\n价格：$5/月\n\n服务器购买注意：都说Linode日本服务器最快,但是Linode老机房的机器已经没有了,我用的是东京2号机房5美元版,实际体验速度并不是特别快,其他机房有待亲测.\n\n注意：由于Vultr没有一键配置选项，所以需要手动配置，但是网上已经有人给出一键安装的脚本：Shadowsocks Python版一键安装脚本\n\n##### 总结与注意\n要想简单便宜，可以选择搬瓦工，但我自己贴身体会来讲，虽然刷网页虽然够了，但是看视频下载文件，还是有些慢，这个时候你可以选择Vultr,和Linode,当然了,我自己用过最爽的还是阿里云的香港vps.\n\n#### Shadowdsocks配合其他软件使用\nshadowsocks代理属于socks5代理，通俗的理解，socks5只是局部代理，不能像vpn那样把整个电脑都代理。因此，一般情况下只有支持socks5的软件才能使用shadowsocks代理。当然我们也可以借助命令行来实现，具体见下面介绍：\n\n##### 终端走代理的方法\n###### 在终端下使用\n```\n$ export ALL_PROXY=socks5://127.0.0.1:1080\n```\n###### 清除代理\n```\n$ unset ALL_PROXY\n```\n为了测试是否成功可以使用以下命令查看IP\n```\n$ curl -i http://ip.cn\n```\n以上命令只对本窗口生效，为了方便呢，可以在~/.bash_profile中加上这个。（如果没有bash_profile文件自行创建）\n```\nfunction setproxy() {\n# export {HTTP,HTTPS,FTP}_PROXY=\"http://127.0.0.1:3128\" 也可以设置http代理\nexport ALL_PROXY=socks5://127.0.0.1:1080\n}\nfunction unsetproxy() {\n# unset {HTTP,HTTPS,FTP}_PROXY\nunset ALL_PROXY\n}\n```\n需要使用代理的时候setproxy，不用了就unsetproxy\n\n就可以很方便的在shell环境下切换设置代理了。\n\n###### 路由器上使用Shadowdsocks配置局域网\n每个路由器都不太一样，自行谷歌吧。\n\n#### Shadowdsocks 进阶\n##### Shadowdsocks加速的几种方案\n方案一：国内服务器安装Haproxy代理Shadowsocks实现加速\n\n方案二：使用锐速加速\n\n方案三：FilnalSpeed加速方案\n\n锐速的使用可以看我的博客\n\n### Linux系统使用SS自动脚本搭建服务器\n\n#### 说明\n1. 一键安装 Shadowsocks-Python， ShadowsocksR， Shadowsocks-Go， Shadowsocks-libev 版（四选一）服务端；\n2. 各版本的启动脚本及配置文件名不再重合；\n3. 每次运行可安装一种版本；\n4. 支持以多次运行来安装多个版本，且各个版本可以共存（注意端口号需设成不同）；\n5. 若已安装多个版本，则卸载时也需多次运行（每次卸载一种）；\n6. Shadowsocks-Python 和 ShadowsocksR 安装后不可同时启动（因为本质上都属 Python 版）。\n\n#### 默认配置\n* 服务器端口：自己设定（如不设定，默认为 8989）\n* 密码：自己设定（如不设定，默认为 teddysun.com）\n* 加密方式：自己设定（如不设定，Python 和 libev 版默认为 aes-256-gcm，R 和 Go 版默认为 aes-256-cfb）\n* 协议（protocol）：自己设定（如不设定，默认为 origin）（仅限 ShadowsocksR 版）\n* 混淆（obfs）：自己设定（如不设定，默认为 plain）（仅限 ShadowsocksR 版）\n* 备注：脚本默认创建单用户配置文件，如需配置多用户，请手动修改相应的配置文件后重启即可。\n#### 客户端下载\n* 常规版 Windows 客户端\n[https://github.com/shadowsocks/shadowsocks-windows/releases](https://github.com/shadowsocks/shadowsocks-windows/releases)\n\n* ShadowsocksR 版 Windows 客户端\n[https://github.com/shadowsocksr/shadowsocksr-csharp/releases](https://github.com/shadowsocksr/shadowsocksr-csharp/releases)\n\n#### 安装方法\nssh登录后,使用以下命令\n```\n$ wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\n$ chmod +x shadowsocks-all.sh\n$ ./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\n```\n安装成功完成后,脚本提示\n```\nCongratulations, your_shadowsocks_version install completed!\nYour Server IP        :your_server_ip\nYour Server Port      :your_server_port\nYour Password         :your_password\nYour Encryption Method:your_encryption_method\nWelcome to visit:https://teddysun.com/486.html\nEnjoy it!\n```\n#### 卸载\n若已安装多个版本，则卸载时也需多次运行（每次卸载一种）\n\n使用root用户登录，运行以下命令：\n```\n./shadowsocks-all.sh uninstall\n```\n#### 启动\n```\n启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。\nShadowsocks-Python 版：\n/etc/init.d/shadowsocks-python start | stop | restart | status\nShadowsocksR 版：\n/etc/init.d/shadowsocks-r start | stop | restart | status\nShadowsocks-Go 版：\n/etc/init.d/shadowsocks-go start | stop | restart | status\nShadowsocks-libev 版：\n/etc/init.d/shadowsocks-libev start | stop | restart | status\n```\n#### 各版本默认配置文件\n```\nShadowsocks-Python 版：\n/etc/shadowsocks-python/config.json\nShadowsocksR 版：\n/etc/shadowsocks-r/config.json\nShadowsocks-Go 版：\n/etc/shadowsocks-go/config.json\nShadowsocks-libev 版：\n/etc/shadowsocks-libev/config.json\n```\n#### 单用户配置文件示例\n```\n{\n\"server\":\"0.0.0.0\",\n\"server_port\":your_server_port,\n\"local_address\":\"127.0.0.1\",\n\"local_port\":1080,\n\"password\":\"your_password\",\n\"timeout\":300,\n\"method\":\"your_encryption_method\",\n\"fast_open\": false\n}\n```\n#### 多用户多端口配置文件示例\n```\n{\n\"server\":\"0.0.0.0\",\n\"local_address\":\"127.0.0.1\",\n\"local_port\":1080,\n\"port_password\":{\n\"8989\":\"password0\",\n\"9001\":\"password1\",\n\"9002\":\"password2\",\n\"9003\":\"password3\",\n\"9004\":\"password4\"\n},\n\"timeout\":300,\n\"method\":\"your_encryption_method\",\n\"fast_open\": false\n}\n```\n","source":"_posts/程序员必备的翻墙姿势.md","raw":"---\ntitle: 程序员必备的翻墙姿势+ss搭建vps服务器\ndate: 2016-12-21 16:28:11\ntags: ss,vps\n---\n### 程序员需要一个自由的互联网！！！\n{% note info %} 其实除了下面描述的vps搭建方法，如果不差钱想要搭建vps服务器，可以去阿里云租个香港服务器最低配置就可以，大概1.2K一年，流量不要买固定的带宽，按量付费，速度选最快，充100块能用超久，速度飞起  {% endnote %}\n\n#### 翻墙的几种手段\n这里就不介绍，修改Hosts、蓝灯、GoAgent、Tor等方式了\n\n##### VPN\nVPN其实就是把你整个网关出口跟远端服务器之间建立一个隧道，你的所有的出口数据都会经过VPN服务器进行转发。\n##### 优点:\n全局代理，配置简单。\n##### 缺点:\n缺点也很明显，无差别代理，访问国内网站，相当于先跳转到国外，再访问国内网站，速度可想而知。\n\n网上可以找到各种免费的VPN代理，也有收费。这里推荐GreenVPN，注册之后可以有免费的VPN用，也可以付费。（PS，网上各种假冒网站，注意甄别！）\n\n具体如何使用，这里就不过多介绍了，\n\n总结：VPN适合需要系统全局翻墙，并且是按需使用的方式。\n\n#### Shadowdsocks\n##### Shadowdsocks介绍(摘自维基百科)\nshadowsocks是一种基于Socks5代理方式的网络数据加密传输包，并采用Apache许可证、GPL、MIT许可证等多种自由软件许可协议开放源代码。shadowsocks分为服务器端和客户端，在使用之前，需要先将服务器端部署到服务器上面，然后通过客户端连接并创建本地代理。目前包使用Python、C、C++、C#、Go语言等编程语言开发。\n\n在中国大陆，本工具也被广泛用于突破防火长城（GFW），以浏览被封锁、屏蔽或干扰的内容。2015年8月22日，Shadowsocks原作者Clowwindy称受到了中国政府的压力，宣布停止维护此计划（项目）并移除其个人页面所存储的源代码。因为移除之前就有大量的复制副本，所以事实上并未停止维护，而是转由其他贡献者们持续维护中。\n##### Shadowsocks的优劣：\n##### 优势:\n安全。所有数据流量全部经过加密，加密算法可选并支持自定义算法。另外，远程DNS解析也使得本地的ISP无法通过DNS查询获取你所访问的网站。\n\n速度相对较快。由于其隐蔽性，只会有很少的数据包会被GFW丢弃，从而保证了连接速度。\n\n客户端配置简单。配置时只需要填写IP /域名、端口号，密码，然后选择加密方式即可。\n\n智能切换。 传统的VPN方式，在切换网络时非常不方便， 比如连上国外的 VPN 之后会发现访问国内的网站速度严重下降。ShadowSocks支持PAC列表，根据PAC中的规则，有针对性地选用恰当的网络访问方式，兼顾了访问速度与访问效率。移动客户端还支持针对不同应用设置单独代理。\n\n代码开源。不像某些蜜罐式的翻墙工具，开源的代码保证了无后门，从而为上网的隐私性与安全性提供保障。\n\n跨平台。支持主流系统包括Windows，Linux，Mac，Android,IOS，都有对应的客户端支持。\n\n##### 劣势:\n技术成本。若自己搭建ShadowSocks服务，需要一定的技术成本。因为大部分服务端是基于运行Linux的VPS（虚拟主机）搭建，因此需要学会使用putty等远程管理工具的使用方法，并掌握一定的Linux基本命令行操作。\n\n金钱成本。租用国外的服务器，需要价格不菲的费用。 若使用免费ShadowSocks账号，可能有一定的安全成本。有一些人会将自己的ShadowSocks节点免费分享出来，这些人是非常值得肯定和称赞的！但是其中有一小部分人别有居心，例如在ShadowSocks的服务器端监听网络流量，进行中间人攻击等，这类钓鱼服务器会严重损害用户的个人信息安全。 若购买收费的ShadowSocks账号， 需要一定的金钱成本 由于很多ShadowSocks卖家都是以盈利为目的，需要花费一定的费用。 那么，自己想要有一个影梭账号的话，到底是选用哪种比较好呢？可以看到网上很多卖ShadowSocks账号的，有的价格很便宜，比自己搭服务器划算多了，是不是直接购买一个账号比较好呢？ 在这里我建议大家自己搭服务器\n\n上面介绍的优势，就是我推荐大家使用的理由，而劣势就是写文章的缘由。\n\n#### 关于VPN\n虽然Shadowdsocks很好用，但是有的时候，总会碰到一个先有鸡还是有蛋的情况，你要配置Shadowdsocks，但是需要先翻墙，所以为了避免这种情况，最好还有备一个VPN还是有必要的。\n\n#### 使用和配置Shadowdsocks客户端\n> 由于iOS系统安全性，需要越狱才能安装Shadowdsocks，如果你已经越狱，你可以自行编译安装，源码\n##### iOS不越狱客户端推荐（以下软件使用了iOS9系统的新特性，也就是话说仅支持iOS9+）\n\n如果搜不到,可以使用境外AppStoreID搜索下载客户端.\n\nSurge:强烈推荐，虽然价格偏高，但是使用体验最好\n\nShadowrocket：价格便宜，买不起上面的，就买这个吧\n\npotatso:价格比上面贵一些，但是代码开源,有能力的可以自己编译安装。\n\nAndroid(Google Play) Shadowsocks\n\nps.不想花钱的,可以试试PP助手之类的软件安装.\n\n##### 客户端使用\n\n这里只介绍MAC系统使用，如果已经有了Shadowsocks帐号：\n\n服务器设定 ->IP、端口、加密、密码，一一对应填写。\n\n测试服务器是否配置成功：\n\n勾选配置好的服务器，选择全局模式，然后打开Google,如果可以就进行下一步。\n\n如果打不开，检查填写有误，检查是否使用了默认的443端口，是否开启了其它代理。\n##### 更新 PAC\n关于PAC介绍可以搜一下这篇文章：SS软件中的pac自动代理模式是什么？\n\nMac版的ss客户端已经停滞更新，官方版本一直停滞在2.6.3。所以，gfwlist地址的改变，直接导致了PAC无法更新了。解决方法有两种，你任选一种吧。\n\n方法A：\n直接改用民间大神修改的2.6.5版本即可，Releases版本：ShadowsocksX-2.6.5[https://github.com/RobertYan/ShadowsocksX/releases](https://github.com/RobertYan/ShadowsocksX/releases)\n\n方法B：\n如果不信任其他人修改的版本，你可以使用这个脚本更新PAC[https://gist.github.com/VincentSit/b5b112d273513f153caf23a9da112b3a](https://gist.github.com/VincentSit/b5b112d273513f153caf23a9da112b3a)\n测试 PAC 是否生效，选择自动模式代理，再次打开Google，如果可以打开，说明配置成功。\n\n##### 配置Shadowdsocks服务器\n这里只介绍，购买VPS服务器，来搭建Shadowdsocks服务端。不讨论购买现成的帐号。\n\n###### 服务器选择一：搬瓦工bandwagonhost\n关键字：价格低、一键配置、支付宝\n价格：$2.99/月，也会有$3.99一年的特价机器,。\n\n服务器购买注意：买价格最便宜的就可以了，优先：洛杉矶和佛罗里达（也可以随时切换）,电信用户不支持搬瓦工,如果是电信不用考虑了\n\n###### 服务器选择二：Vultr\n\n关键字：配置高，可做服务器、速度快\n\n价格：$5/月\n\n服务器购买注意：必须选择日本VPS！！\n\n注意：由于Vultr没有一键配置选项，所以需要手动配置，但是网上已经有人给出一键安装的脚本：Shadowsocks Python版一键安装脚本\n\n###### 服务器选择三：Linode\n关键字：本人使用,配置高，可做服务器、速度快\n\n价格：$5/月\n\n服务器购买注意：都说Linode日本服务器最快,但是Linode老机房的机器已经没有了,我用的是东京2号机房5美元版,实际体验速度并不是特别快,其他机房有待亲测.\n\n注意：由于Vultr没有一键配置选项，所以需要手动配置，但是网上已经有人给出一键安装的脚本：Shadowsocks Python版一键安装脚本\n\n##### 总结与注意\n要想简单便宜，可以选择搬瓦工，但我自己贴身体会来讲，虽然刷网页虽然够了，但是看视频下载文件，还是有些慢，这个时候你可以选择Vultr,和Linode,当然了,我自己用过最爽的还是阿里云的香港vps.\n\n#### Shadowdsocks配合其他软件使用\nshadowsocks代理属于socks5代理，通俗的理解，socks5只是局部代理，不能像vpn那样把整个电脑都代理。因此，一般情况下只有支持socks5的软件才能使用shadowsocks代理。当然我们也可以借助命令行来实现，具体见下面介绍：\n\n##### 终端走代理的方法\n###### 在终端下使用\n```\n$ export ALL_PROXY=socks5://127.0.0.1:1080\n```\n###### 清除代理\n```\n$ unset ALL_PROXY\n```\n为了测试是否成功可以使用以下命令查看IP\n```\n$ curl -i http://ip.cn\n```\n以上命令只对本窗口生效，为了方便呢，可以在~/.bash_profile中加上这个。（如果没有bash_profile文件自行创建）\n```\nfunction setproxy() {\n# export {HTTP,HTTPS,FTP}_PROXY=\"http://127.0.0.1:3128\" 也可以设置http代理\nexport ALL_PROXY=socks5://127.0.0.1:1080\n}\nfunction unsetproxy() {\n# unset {HTTP,HTTPS,FTP}_PROXY\nunset ALL_PROXY\n}\n```\n需要使用代理的时候setproxy，不用了就unsetproxy\n\n就可以很方便的在shell环境下切换设置代理了。\n\n###### 路由器上使用Shadowdsocks配置局域网\n每个路由器都不太一样，自行谷歌吧。\n\n#### Shadowdsocks 进阶\n##### Shadowdsocks加速的几种方案\n方案一：国内服务器安装Haproxy代理Shadowsocks实现加速\n\n方案二：使用锐速加速\n\n方案三：FilnalSpeed加速方案\n\n锐速的使用可以看我的博客\n\n### Linux系统使用SS自动脚本搭建服务器\n\n#### 说明\n1. 一键安装 Shadowsocks-Python， ShadowsocksR， Shadowsocks-Go， Shadowsocks-libev 版（四选一）服务端；\n2. 各版本的启动脚本及配置文件名不再重合；\n3. 每次运行可安装一种版本；\n4. 支持以多次运行来安装多个版本，且各个版本可以共存（注意端口号需设成不同）；\n5. 若已安装多个版本，则卸载时也需多次运行（每次卸载一种）；\n6. Shadowsocks-Python 和 ShadowsocksR 安装后不可同时启动（因为本质上都属 Python 版）。\n\n#### 默认配置\n* 服务器端口：自己设定（如不设定，默认为 8989）\n* 密码：自己设定（如不设定，默认为 teddysun.com）\n* 加密方式：自己设定（如不设定，Python 和 libev 版默认为 aes-256-gcm，R 和 Go 版默认为 aes-256-cfb）\n* 协议（protocol）：自己设定（如不设定，默认为 origin）（仅限 ShadowsocksR 版）\n* 混淆（obfs）：自己设定（如不设定，默认为 plain）（仅限 ShadowsocksR 版）\n* 备注：脚本默认创建单用户配置文件，如需配置多用户，请手动修改相应的配置文件后重启即可。\n#### 客户端下载\n* 常规版 Windows 客户端\n[https://github.com/shadowsocks/shadowsocks-windows/releases](https://github.com/shadowsocks/shadowsocks-windows/releases)\n\n* ShadowsocksR 版 Windows 客户端\n[https://github.com/shadowsocksr/shadowsocksr-csharp/releases](https://github.com/shadowsocksr/shadowsocksr-csharp/releases)\n\n#### 安装方法\nssh登录后,使用以下命令\n```\n$ wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\n$ chmod +x shadowsocks-all.sh\n$ ./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\n```\n安装成功完成后,脚本提示\n```\nCongratulations, your_shadowsocks_version install completed!\nYour Server IP        :your_server_ip\nYour Server Port      :your_server_port\nYour Password         :your_password\nYour Encryption Method:your_encryption_method\nWelcome to visit:https://teddysun.com/486.html\nEnjoy it!\n```\n#### 卸载\n若已安装多个版本，则卸载时也需多次运行（每次卸载一种）\n\n使用root用户登录，运行以下命令：\n```\n./shadowsocks-all.sh uninstall\n```\n#### 启动\n```\n启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。\nShadowsocks-Python 版：\n/etc/init.d/shadowsocks-python start | stop | restart | status\nShadowsocksR 版：\n/etc/init.d/shadowsocks-r start | stop | restart | status\nShadowsocks-Go 版：\n/etc/init.d/shadowsocks-go start | stop | restart | status\nShadowsocks-libev 版：\n/etc/init.d/shadowsocks-libev start | stop | restart | status\n```\n#### 各版本默认配置文件\n```\nShadowsocks-Python 版：\n/etc/shadowsocks-python/config.json\nShadowsocksR 版：\n/etc/shadowsocks-r/config.json\nShadowsocks-Go 版：\n/etc/shadowsocks-go/config.json\nShadowsocks-libev 版：\n/etc/shadowsocks-libev/config.json\n```\n#### 单用户配置文件示例\n```\n{\n\"server\":\"0.0.0.0\",\n\"server_port\":your_server_port,\n\"local_address\":\"127.0.0.1\",\n\"local_port\":1080,\n\"password\":\"your_password\",\n\"timeout\":300,\n\"method\":\"your_encryption_method\",\n\"fast_open\": false\n}\n```\n#### 多用户多端口配置文件示例\n```\n{\n\"server\":\"0.0.0.0\",\n\"local_address\":\"127.0.0.1\",\n\"local_port\":1080,\n\"port_password\":{\n\"8989\":\"password0\",\n\"9001\":\"password1\",\n\"9002\":\"password2\",\n\"9003\":\"password3\",\n\"9004\":\"password4\"\n},\n\"timeout\":300,\n\"method\":\"your_encryption_method\",\n\"fast_open\": false\n}\n```\n","slug":"程序员必备的翻墙姿势","published":1,"updated":"2017-10-19T10:44:23.437Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8yck61100080dxjxz0o462k","content":"<h3 id=\"程序员需要一个自由的互联网！！！\"><a href=\"#程序员需要一个自由的互联网！！！\" class=\"headerlink\" title=\"程序员需要一个自由的互联网！！！\"></a>程序员需要一个自由的互联网！！！</h3><div class=\"note info\"><p>其实除了下面描述的vps搭建方法，如果不差钱想要搭建vps服务器，可以去阿里云租个香港服务器最低配置就可以，大概1.2K一年，流量不要买固定的带宽，按量付费，速度选最快，充100块能用超久，速度飞起  </p></div>\n<h4 id=\"翻墙的几种手段\"><a href=\"#翻墙的几种手段\" class=\"headerlink\" title=\"翻墙的几种手段\"></a>翻墙的几种手段</h4><p>这里就不介绍，修改Hosts、蓝灯、GoAgent、Tor等方式了</p>\n<h5 id=\"VPN\"><a href=\"#VPN\" class=\"headerlink\" title=\"VPN\"></a>VPN</h5><p>VPN其实就是把你整个网关出口跟远端服务器之间建立一个隧道，你的所有的出口数据都会经过VPN服务器进行转发。</p>\n<h5 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点:\"></a>优点:</h5><p>全局代理，配置简单。</p>\n<h5 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点:\"></a>缺点:</h5><p>缺点也很明显，无差别代理，访问国内网站，相当于先跳转到国外，再访问国内网站，速度可想而知。</p>\n<p>网上可以找到各种免费的VPN代理，也有收费。这里推荐GreenVPN，注册之后可以有免费的VPN用，也可以付费。（PS，网上各种假冒网站，注意甄别！）</p>\n<p>具体如何使用，这里就不过多介绍了，</p>\n<p>总结：VPN适合需要系统全局翻墙，并且是按需使用的方式。</p>\n<h4 id=\"Shadowdsocks\"><a href=\"#Shadowdsocks\" class=\"headerlink\" title=\"Shadowdsocks\"></a>Shadowdsocks</h4><h5 id=\"Shadowdsocks介绍-摘自维基百科\"><a href=\"#Shadowdsocks介绍-摘自维基百科\" class=\"headerlink\" title=\"Shadowdsocks介绍(摘自维基百科)\"></a>Shadowdsocks介绍(摘自维基百科)</h5><p>shadowsocks是一种基于Socks5代理方式的网络数据加密传输包，并采用Apache许可证、GPL、MIT许可证等多种自由软件许可协议开放源代码。shadowsocks分为服务器端和客户端，在使用之前，需要先将服务器端部署到服务器上面，然后通过客户端连接并创建本地代理。目前包使用Python、C、C++、C#、Go语言等编程语言开发。</p>\n<p>在中国大陆，本工具也被广泛用于突破防火长城（GFW），以浏览被封锁、屏蔽或干扰的内容。2015年8月22日，Shadowsocks原作者Clowwindy称受到了中国政府的压力，宣布停止维护此计划（项目）并移除其个人页面所存储的源代码。因为移除之前就有大量的复制副本，所以事实上并未停止维护，而是转由其他贡献者们持续维护中。</p>\n<h5 id=\"Shadowsocks的优劣：\"><a href=\"#Shadowsocks的优劣：\" class=\"headerlink\" title=\"Shadowsocks的优劣：\"></a>Shadowsocks的优劣：</h5><h5 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势:\"></a>优势:</h5><p>安全。所有数据流量全部经过加密，加密算法可选并支持自定义算法。另外，远程DNS解析也使得本地的ISP无法通过DNS查询获取你所访问的网站。</p>\n<p>速度相对较快。由于其隐蔽性，只会有很少的数据包会被GFW丢弃，从而保证了连接速度。</p>\n<p>客户端配置简单。配置时只需要填写IP /域名、端口号，密码，然后选择加密方式即可。</p>\n<p>智能切换。 传统的VPN方式，在切换网络时非常不方便， 比如连上国外的 VPN 之后会发现访问国内的网站速度严重下降。ShadowSocks支持PAC列表，根据PAC中的规则，有针对性地选用恰当的网络访问方式，兼顾了访问速度与访问效率。移动客户端还支持针对不同应用设置单独代理。</p>\n<p>代码开源。不像某些蜜罐式的翻墙工具，开源的代码保证了无后门，从而为上网的隐私性与安全性提供保障。</p>\n<p>跨平台。支持主流系统包括Windows，Linux，Mac，Android,IOS，都有对应的客户端支持。</p>\n<h5 id=\"劣势\"><a href=\"#劣势\" class=\"headerlink\" title=\"劣势:\"></a>劣势:</h5><p>技术成本。若自己搭建ShadowSocks服务，需要一定的技术成本。因为大部分服务端是基于运行Linux的VPS（虚拟主机）搭建，因此需要学会使用putty等远程管理工具的使用方法，并掌握一定的Linux基本命令行操作。</p>\n<p>金钱成本。租用国外的服务器，需要价格不菲的费用。 若使用免费ShadowSocks账号，可能有一定的安全成本。有一些人会将自己的ShadowSocks节点免费分享出来，这些人是非常值得肯定和称赞的！但是其中有一小部分人别有居心，例如在ShadowSocks的服务器端监听网络流量，进行中间人攻击等，这类钓鱼服务器会严重损害用户的个人信息安全。 若购买收费的ShadowSocks账号， 需要一定的金钱成本 由于很多ShadowSocks卖家都是以盈利为目的，需要花费一定的费用。 那么，自己想要有一个影梭账号的话，到底是选用哪种比较好呢？可以看到网上很多卖ShadowSocks账号的，有的价格很便宜，比自己搭服务器划算多了，是不是直接购买一个账号比较好呢？ 在这里我建议大家自己搭服务器</p>\n<p>上面介绍的优势，就是我推荐大家使用的理由，而劣势就是写文章的缘由。</p>\n<h4 id=\"关于VPN\"><a href=\"#关于VPN\" class=\"headerlink\" title=\"关于VPN\"></a>关于VPN</h4><p>虽然Shadowdsocks很好用，但是有的时候，总会碰到一个先有鸡还是有蛋的情况，你要配置Shadowdsocks，但是需要先翻墙，所以为了避免这种情况，最好还有备一个VPN还是有必要的。</p>\n<h4 id=\"使用和配置Shadowdsocks客户端\"><a href=\"#使用和配置Shadowdsocks客户端\" class=\"headerlink\" title=\"使用和配置Shadowdsocks客户端\"></a>使用和配置Shadowdsocks客户端</h4><blockquote>\n<p>由于iOS系统安全性，需要越狱才能安装Shadowdsocks，如果你已经越狱，你可以自行编译安装，源码</p>\n<h5 id=\"iOS不越狱客户端推荐（以下软件使用了iOS9系统的新特性，也就是话说仅支持iOS9-）\"><a href=\"#iOS不越狱客户端推荐（以下软件使用了iOS9系统的新特性，也就是话说仅支持iOS9-）\" class=\"headerlink\" title=\"iOS不越狱客户端推荐（以下软件使用了iOS9系统的新特性，也就是话说仅支持iOS9+）\"></a>iOS不越狱客户端推荐（以下软件使用了iOS9系统的新特性，也就是话说仅支持iOS9+）</h5></blockquote>\n<p>如果搜不到,可以使用境外AppStoreID搜索下载客户端.</p>\n<p>Surge:强烈推荐，虽然价格偏高，但是使用体验最好</p>\n<p>Shadowrocket：价格便宜，买不起上面的，就买这个吧</p>\n<p>potatso:价格比上面贵一些，但是代码开源,有能力的可以自己编译安装。</p>\n<p>Android(Google Play) Shadowsocks</p>\n<p>ps.不想花钱的,可以试试PP助手之类的软件安装.</p>\n<h5 id=\"客户端使用\"><a href=\"#客户端使用\" class=\"headerlink\" title=\"客户端使用\"></a>客户端使用</h5><p>这里只介绍MAC系统使用，如果已经有了Shadowsocks帐号：</p>\n<p>服务器设定 -&gt;IP、端口、加密、密码，一一对应填写。</p>\n<p>测试服务器是否配置成功：</p>\n<p>勾选配置好的服务器，选择全局模式，然后打开Google,如果可以就进行下一步。</p>\n<p>如果打不开，检查填写有误，检查是否使用了默认的443端口，是否开启了其它代理。</p>\n<h5 id=\"更新-PAC\"><a href=\"#更新-PAC\" class=\"headerlink\" title=\"更新 PAC\"></a>更新 PAC</h5><p>关于PAC介绍可以搜一下这篇文章：SS软件中的pac自动代理模式是什么？</p>\n<p>Mac版的ss客户端已经停滞更新，官方版本一直停滞在2.6.3。所以，gfwlist地址的改变，直接导致了PAC无法更新了。解决方法有两种，你任选一种吧。</p>\n<p>方法A：<br>直接改用民间大神修改的2.6.5版本即可，Releases版本：ShadowsocksX-2.6.5<a href=\"https://github.com/RobertYan/ShadowsocksX/releases\" target=\"_blank\" rel=\"external\">https://github.com/RobertYan/ShadowsocksX/releases</a></p>\n<p>方法B：<br>如果不信任其他人修改的版本，你可以使用这个脚本更新PAC<a href=\"https://gist.github.com/VincentSit/b5b112d273513f153caf23a9da112b3a\" target=\"_blank\" rel=\"external\">https://gist.github.com/VincentSit/b5b112d273513f153caf23a9da112b3a</a><br>测试 PAC 是否生效，选择自动模式代理，再次打开Google，如果可以打开，说明配置成功。</p>\n<h5 id=\"配置Shadowdsocks服务器\"><a href=\"#配置Shadowdsocks服务器\" class=\"headerlink\" title=\"配置Shadowdsocks服务器\"></a>配置Shadowdsocks服务器</h5><p>这里只介绍，购买VPS服务器，来搭建Shadowdsocks服务端。不讨论购买现成的帐号。</p>\n<h6 id=\"服务器选择一：搬瓦工bandwagonhost\"><a href=\"#服务器选择一：搬瓦工bandwagonhost\" class=\"headerlink\" title=\"服务器选择一：搬瓦工bandwagonhost\"></a>服务器选择一：搬瓦工bandwagonhost</h6><p>关键字：价格低、一键配置、支付宝<br>价格：$2.99/月，也会有$3.99一年的特价机器,。</p>\n<p>服务器购买注意：买价格最便宜的就可以了，优先：洛杉矶和佛罗里达（也可以随时切换）,电信用户不支持搬瓦工,如果是电信不用考虑了</p>\n<h6 id=\"服务器选择二：Vultr\"><a href=\"#服务器选择二：Vultr\" class=\"headerlink\" title=\"服务器选择二：Vultr\"></a>服务器选择二：Vultr</h6><p>关键字：配置高，可做服务器、速度快</p>\n<p>价格：$5/月</p>\n<p>服务器购买注意：必须选择日本VPS！！</p>\n<p>注意：由于Vultr没有一键配置选项，所以需要手动配置，但是网上已经有人给出一键安装的脚本：Shadowsocks Python版一键安装脚本</p>\n<h6 id=\"服务器选择三：Linode\"><a href=\"#服务器选择三：Linode\" class=\"headerlink\" title=\"服务器选择三：Linode\"></a>服务器选择三：Linode</h6><p>关键字：本人使用,配置高，可做服务器、速度快</p>\n<p>价格：$5/月</p>\n<p>服务器购买注意：都说Linode日本服务器最快,但是Linode老机房的机器已经没有了,我用的是东京2号机房5美元版,实际体验速度并不是特别快,其他机房有待亲测.</p>\n<p>注意：由于Vultr没有一键配置选项，所以需要手动配置，但是网上已经有人给出一键安装的脚本：Shadowsocks Python版一键安装脚本</p>\n<h5 id=\"总结与注意\"><a href=\"#总结与注意\" class=\"headerlink\" title=\"总结与注意\"></a>总结与注意</h5><p>要想简单便宜，可以选择搬瓦工，但我自己贴身体会来讲，虽然刷网页虽然够了，但是看视频下载文件，还是有些慢，这个时候你可以选择Vultr,和Linode,当然了,我自己用过最爽的还是阿里云的香港vps.</p>\n<h4 id=\"Shadowdsocks配合其他软件使用\"><a href=\"#Shadowdsocks配合其他软件使用\" class=\"headerlink\" title=\"Shadowdsocks配合其他软件使用\"></a>Shadowdsocks配合其他软件使用</h4><p>shadowsocks代理属于socks5代理，通俗的理解，socks5只是局部代理，不能像vpn那样把整个电脑都代理。因此，一般情况下只有支持socks5的软件才能使用shadowsocks代理。当然我们也可以借助命令行来实现，具体见下面介绍：</p>\n<h5 id=\"终端走代理的方法\"><a href=\"#终端走代理的方法\" class=\"headerlink\" title=\"终端走代理的方法\"></a>终端走代理的方法</h5><h6 id=\"在终端下使用\"><a href=\"#在终端下使用\" class=\"headerlink\" title=\"在终端下使用\"></a>在终端下使用</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ export ALL_PROXY=socks5://127.0.0.1:1080</div></pre></td></tr></table></figure>\n<h6 id=\"清除代理\"><a href=\"#清除代理\" class=\"headerlink\" title=\"清除代理\"></a>清除代理</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ unset ALL_PROXY</div></pre></td></tr></table></figure>\n<p>为了测试是否成功可以使用以下命令查看IP<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i http://ip.cn</div></pre></td></tr></table></figure></p>\n<p>以上命令只对本窗口生效，为了方便呢，可以在~/.bash_profile中加上这个。（如果没有bash_profile文件自行创建）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">function setproxy() &#123;</div><div class=\"line\"># export &#123;HTTP,HTTPS,FTP&#125;_PROXY=&quot;http://127.0.0.1:3128&quot; 也可以设置http代理</div><div class=\"line\">export ALL_PROXY=socks5://127.0.0.1:1080</div><div class=\"line\">&#125;</div><div class=\"line\">function unsetproxy() &#123;</div><div class=\"line\"># unset &#123;HTTP,HTTPS,FTP&#125;_PROXY</div><div class=\"line\">unset ALL_PROXY</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>需要使用代理的时候setproxy，不用了就unsetproxy</p>\n<p>就可以很方便的在shell环境下切换设置代理了。</p>\n<h6 id=\"路由器上使用Shadowdsocks配置局域网\"><a href=\"#路由器上使用Shadowdsocks配置局域网\" class=\"headerlink\" title=\"路由器上使用Shadowdsocks配置局域网\"></a>路由器上使用Shadowdsocks配置局域网</h6><p>每个路由器都不太一样，自行谷歌吧。</p>\n<h4 id=\"Shadowdsocks-进阶\"><a href=\"#Shadowdsocks-进阶\" class=\"headerlink\" title=\"Shadowdsocks 进阶\"></a>Shadowdsocks 进阶</h4><h5 id=\"Shadowdsocks加速的几种方案\"><a href=\"#Shadowdsocks加速的几种方案\" class=\"headerlink\" title=\"Shadowdsocks加速的几种方案\"></a>Shadowdsocks加速的几种方案</h5><p>方案一：国内服务器安装Haproxy代理Shadowsocks实现加速</p>\n<p>方案二：使用锐速加速</p>\n<p>方案三：FilnalSpeed加速方案</p>\n<p>锐速的使用可以看我的博客</p>\n<h3 id=\"Linux系统使用SS自动脚本搭建服务器\"><a href=\"#Linux系统使用SS自动脚本搭建服务器\" class=\"headerlink\" title=\"Linux系统使用SS自动脚本搭建服务器\"></a>Linux系统使用SS自动脚本搭建服务器</h3><h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4><ol>\n<li>一键安装 Shadowsocks-Python， ShadowsocksR， Shadowsocks-Go， Shadowsocks-libev 版（四选一）服务端；</li>\n<li>各版本的启动脚本及配置文件名不再重合；</li>\n<li>每次运行可安装一种版本；</li>\n<li>支持以多次运行来安装多个版本，且各个版本可以共存（注意端口号需设成不同）；</li>\n<li>若已安装多个版本，则卸载时也需多次运行（每次卸载一种）；</li>\n<li>Shadowsocks-Python 和 ShadowsocksR 安装后不可同时启动（因为本质上都属 Python 版）。</li>\n</ol>\n<h4 id=\"默认配置\"><a href=\"#默认配置\" class=\"headerlink\" title=\"默认配置\"></a>默认配置</h4><ul>\n<li>服务器端口：自己设定（如不设定，默认为 8989）</li>\n<li>密码：自己设定（如不设定，默认为 teddysun.com）</li>\n<li>加密方式：自己设定（如不设定，Python 和 libev 版默认为 aes-256-gcm，R 和 Go 版默认为 aes-256-cfb）</li>\n<li>协议（protocol）：自己设定（如不设定，默认为 origin）（仅限 ShadowsocksR 版）</li>\n<li>混淆（obfs）：自己设定（如不设定，默认为 plain）（仅限 ShadowsocksR 版）</li>\n<li>备注：脚本默认创建单用户配置文件，如需配置多用户，请手动修改相应的配置文件后重启即可。<h4 id=\"客户端下载\"><a href=\"#客户端下载\" class=\"headerlink\" title=\"客户端下载\"></a>客户端下载</h4></li>\n<li><p>常规版 Windows 客户端<br><a href=\"https://github.com/shadowsocks/shadowsocks-windows/releases\" target=\"_blank\" rel=\"external\">https://github.com/shadowsocks/shadowsocks-windows/releases</a></p>\n</li>\n<li><p>ShadowsocksR 版 Windows 客户端<br><a href=\"https://github.com/shadowsocksr/shadowsocksr-csharp/releases\" target=\"_blank\" rel=\"external\">https://github.com/shadowsocksr/shadowsocksr-csharp/releases</a></p>\n</li>\n</ul>\n<h4 id=\"安装方法\"><a href=\"#安装方法\" class=\"headerlink\" title=\"安装方法\"></a>安装方法</h4><p>ssh登录后,使用以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh</div><div class=\"line\">$ chmod +x shadowsocks-all.sh</div><div class=\"line\">$ ./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</div></pre></td></tr></table></figure></p>\n<p>安装成功完成后,脚本提示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Congratulations, your_shadowsocks_version install completed!</div><div class=\"line\">Your Server IP        :your_server_ip</div><div class=\"line\">Your Server Port      :your_server_port</div><div class=\"line\">Your Password         :your_password</div><div class=\"line\">Your Encryption Method:your_encryption_method</div><div class=\"line\">Welcome to visit:https://teddysun.com/486.html</div><div class=\"line\">Enjoy it!</div></pre></td></tr></table></figure></p>\n<h4 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h4><p>若已安装多个版本，则卸载时也需多次运行（每次卸载一种）</p>\n<p>使用root用户登录，运行以下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./shadowsocks-all.sh uninstall</div></pre></td></tr></table></figure></p>\n<h4 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。</div><div class=\"line\">Shadowsocks-Python 版：</div><div class=\"line\">/etc/init.d/shadowsocks-python start | stop | restart | status</div><div class=\"line\">ShadowsocksR 版：</div><div class=\"line\">/etc/init.d/shadowsocks-r start | stop | restart | status</div><div class=\"line\">Shadowsocks-Go 版：</div><div class=\"line\">/etc/init.d/shadowsocks-go start | stop | restart | status</div><div class=\"line\">Shadowsocks-libev 版：</div><div class=\"line\">/etc/init.d/shadowsocks-libev start | stop | restart | status</div></pre></td></tr></table></figure>\n<h4 id=\"各版本默认配置文件\"><a href=\"#各版本默认配置文件\" class=\"headerlink\" title=\"各版本默认配置文件\"></a>各版本默认配置文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Shadowsocks-Python 版：</div><div class=\"line\">/etc/shadowsocks-python/config.json</div><div class=\"line\">ShadowsocksR 版：</div><div class=\"line\">/etc/shadowsocks-r/config.json</div><div class=\"line\">Shadowsocks-Go 版：</div><div class=\"line\">/etc/shadowsocks-go/config.json</div><div class=\"line\">Shadowsocks-libev 版：</div><div class=\"line\">/etc/shadowsocks-libev/config.json</div></pre></td></tr></table></figure>\n<h4 id=\"单用户配置文件示例\"><a href=\"#单用户配置文件示例\" class=\"headerlink\" title=\"单用户配置文件示例\"></a>单用户配置文件示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">&quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class=\"line\">&quot;server_port&quot;:your_server_port,</div><div class=\"line\">&quot;local_address&quot;:&quot;127.0.0.1&quot;,</div><div class=\"line\">&quot;local_port&quot;:1080,</div><div class=\"line\">&quot;password&quot;:&quot;your_password&quot;,</div><div class=\"line\">&quot;timeout&quot;:300,</div><div class=\"line\">&quot;method&quot;:&quot;your_encryption_method&quot;,</div><div class=\"line\">&quot;fast_open&quot;: false</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"多用户多端口配置文件示例\"><a href=\"#多用户多端口配置文件示例\" class=\"headerlink\" title=\"多用户多端口配置文件示例\"></a>多用户多端口配置文件示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">&quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class=\"line\">&quot;local_address&quot;:&quot;127.0.0.1&quot;,</div><div class=\"line\">&quot;local_port&quot;:1080,</div><div class=\"line\">&quot;port_password&quot;:&#123;</div><div class=\"line\">&quot;8989&quot;:&quot;password0&quot;,</div><div class=\"line\">&quot;9001&quot;:&quot;password1&quot;,</div><div class=\"line\">&quot;9002&quot;:&quot;password2&quot;,</div><div class=\"line\">&quot;9003&quot;:&quot;password3&quot;,</div><div class=\"line\">&quot;9004&quot;:&quot;password4&quot;</div><div class=\"line\">&#125;,</div><div class=\"line\">&quot;timeout&quot;:300,</div><div class=\"line\">&quot;method&quot;:&quot;your_encryption_method&quot;,</div><div class=\"line\">&quot;fast_open&quot;: false</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"程序员需要一个自由的互联网！！！\"><a href=\"#程序员需要一个自由的互联网！！！\" class=\"headerlink\" title=\"程序员需要一个自由的互联网！！！\"></a>程序员需要一个自由的互联网！！！</h3><div class=\"note info\"><p>其实除了下面描述的vps搭建方法，如果不差钱想要搭建vps服务器，可以去阿里云租个香港服务器最低配置就可以，大概1.2K一年，流量不要买固定的带宽，按量付费，速度选最快，充100块能用超久，速度飞起  </p></div>\n<h4 id=\"翻墙的几种手段\"><a href=\"#翻墙的几种手段\" class=\"headerlink\" title=\"翻墙的几种手段\"></a>翻墙的几种手段</h4><p>这里就不介绍，修改Hosts、蓝灯、GoAgent、Tor等方式了</p>\n<h5 id=\"VPN\"><a href=\"#VPN\" class=\"headerlink\" title=\"VPN\"></a>VPN</h5><p>VPN其实就是把你整个网关出口跟远端服务器之间建立一个隧道，你的所有的出口数据都会经过VPN服务器进行转发。</p>\n<h5 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点:\"></a>优点:</h5><p>全局代理，配置简单。</p>\n<h5 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点:\"></a>缺点:</h5><p>缺点也很明显，无差别代理，访问国内网站，相当于先跳转到国外，再访问国内网站，速度可想而知。</p>\n<p>网上可以找到各种免费的VPN代理，也有收费。这里推荐GreenVPN，注册之后可以有免费的VPN用，也可以付费。（PS，网上各种假冒网站，注意甄别！）</p>\n<p>具体如何使用，这里就不过多介绍了，</p>\n<p>总结：VPN适合需要系统全局翻墙，并且是按需使用的方式。</p>\n<h4 id=\"Shadowdsocks\"><a href=\"#Shadowdsocks\" class=\"headerlink\" title=\"Shadowdsocks\"></a>Shadowdsocks</h4><h5 id=\"Shadowdsocks介绍-摘自维基百科\"><a href=\"#Shadowdsocks介绍-摘自维基百科\" class=\"headerlink\" title=\"Shadowdsocks介绍(摘自维基百科)\"></a>Shadowdsocks介绍(摘自维基百科)</h5><p>shadowsocks是一种基于Socks5代理方式的网络数据加密传输包，并采用Apache许可证、GPL、MIT许可证等多种自由软件许可协议开放源代码。shadowsocks分为服务器端和客户端，在使用之前，需要先将服务器端部署到服务器上面，然后通过客户端连接并创建本地代理。目前包使用Python、C、C++、C#、Go语言等编程语言开发。</p>\n<p>在中国大陆，本工具也被广泛用于突破防火长城（GFW），以浏览被封锁、屏蔽或干扰的内容。2015年8月22日，Shadowsocks原作者Clowwindy称受到了中国政府的压力，宣布停止维护此计划（项目）并移除其个人页面所存储的源代码。因为移除之前就有大量的复制副本，所以事实上并未停止维护，而是转由其他贡献者们持续维护中。</p>\n<h5 id=\"Shadowsocks的优劣：\"><a href=\"#Shadowsocks的优劣：\" class=\"headerlink\" title=\"Shadowsocks的优劣：\"></a>Shadowsocks的优劣：</h5><h5 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势:\"></a>优势:</h5><p>安全。所有数据流量全部经过加密，加密算法可选并支持自定义算法。另外，远程DNS解析也使得本地的ISP无法通过DNS查询获取你所访问的网站。</p>\n<p>速度相对较快。由于其隐蔽性，只会有很少的数据包会被GFW丢弃，从而保证了连接速度。</p>\n<p>客户端配置简单。配置时只需要填写IP /域名、端口号，密码，然后选择加密方式即可。</p>\n<p>智能切换。 传统的VPN方式，在切换网络时非常不方便， 比如连上国外的 VPN 之后会发现访问国内的网站速度严重下降。ShadowSocks支持PAC列表，根据PAC中的规则，有针对性地选用恰当的网络访问方式，兼顾了访问速度与访问效率。移动客户端还支持针对不同应用设置单独代理。</p>\n<p>代码开源。不像某些蜜罐式的翻墙工具，开源的代码保证了无后门，从而为上网的隐私性与安全性提供保障。</p>\n<p>跨平台。支持主流系统包括Windows，Linux，Mac，Android,IOS，都有对应的客户端支持。</p>\n<h5 id=\"劣势\"><a href=\"#劣势\" class=\"headerlink\" title=\"劣势:\"></a>劣势:</h5><p>技术成本。若自己搭建ShadowSocks服务，需要一定的技术成本。因为大部分服务端是基于运行Linux的VPS（虚拟主机）搭建，因此需要学会使用putty等远程管理工具的使用方法，并掌握一定的Linux基本命令行操作。</p>\n<p>金钱成本。租用国外的服务器，需要价格不菲的费用。 若使用免费ShadowSocks账号，可能有一定的安全成本。有一些人会将自己的ShadowSocks节点免费分享出来，这些人是非常值得肯定和称赞的！但是其中有一小部分人别有居心，例如在ShadowSocks的服务器端监听网络流量，进行中间人攻击等，这类钓鱼服务器会严重损害用户的个人信息安全。 若购买收费的ShadowSocks账号， 需要一定的金钱成本 由于很多ShadowSocks卖家都是以盈利为目的，需要花费一定的费用。 那么，自己想要有一个影梭账号的话，到底是选用哪种比较好呢？可以看到网上很多卖ShadowSocks账号的，有的价格很便宜，比自己搭服务器划算多了，是不是直接购买一个账号比较好呢？ 在这里我建议大家自己搭服务器</p>\n<p>上面介绍的优势，就是我推荐大家使用的理由，而劣势就是写文章的缘由。</p>\n<h4 id=\"关于VPN\"><a href=\"#关于VPN\" class=\"headerlink\" title=\"关于VPN\"></a>关于VPN</h4><p>虽然Shadowdsocks很好用，但是有的时候，总会碰到一个先有鸡还是有蛋的情况，你要配置Shadowdsocks，但是需要先翻墙，所以为了避免这种情况，最好还有备一个VPN还是有必要的。</p>\n<h4 id=\"使用和配置Shadowdsocks客户端\"><a href=\"#使用和配置Shadowdsocks客户端\" class=\"headerlink\" title=\"使用和配置Shadowdsocks客户端\"></a>使用和配置Shadowdsocks客户端</h4><blockquote>\n<p>由于iOS系统安全性，需要越狱才能安装Shadowdsocks，如果你已经越狱，你可以自行编译安装，源码</p>\n<h5 id=\"iOS不越狱客户端推荐（以下软件使用了iOS9系统的新特性，也就是话说仅支持iOS9-）\"><a href=\"#iOS不越狱客户端推荐（以下软件使用了iOS9系统的新特性，也就是话说仅支持iOS9-）\" class=\"headerlink\" title=\"iOS不越狱客户端推荐（以下软件使用了iOS9系统的新特性，也就是话说仅支持iOS9+）\"></a>iOS不越狱客户端推荐（以下软件使用了iOS9系统的新特性，也就是话说仅支持iOS9+）</h5></blockquote>\n<p>如果搜不到,可以使用境外AppStoreID搜索下载客户端.</p>\n<p>Surge:强烈推荐，虽然价格偏高，但是使用体验最好</p>\n<p>Shadowrocket：价格便宜，买不起上面的，就买这个吧</p>\n<p>potatso:价格比上面贵一些，但是代码开源,有能力的可以自己编译安装。</p>\n<p>Android(Google Play) Shadowsocks</p>\n<p>ps.不想花钱的,可以试试PP助手之类的软件安装.</p>\n<h5 id=\"客户端使用\"><a href=\"#客户端使用\" class=\"headerlink\" title=\"客户端使用\"></a>客户端使用</h5><p>这里只介绍MAC系统使用，如果已经有了Shadowsocks帐号：</p>\n<p>服务器设定 -&gt;IP、端口、加密、密码，一一对应填写。</p>\n<p>测试服务器是否配置成功：</p>\n<p>勾选配置好的服务器，选择全局模式，然后打开Google,如果可以就进行下一步。</p>\n<p>如果打不开，检查填写有误，检查是否使用了默认的443端口，是否开启了其它代理。</p>\n<h5 id=\"更新-PAC\"><a href=\"#更新-PAC\" class=\"headerlink\" title=\"更新 PAC\"></a>更新 PAC</h5><p>关于PAC介绍可以搜一下这篇文章：SS软件中的pac自动代理模式是什么？</p>\n<p>Mac版的ss客户端已经停滞更新，官方版本一直停滞在2.6.3。所以，gfwlist地址的改变，直接导致了PAC无法更新了。解决方法有两种，你任选一种吧。</p>\n<p>方法A：<br>直接改用民间大神修改的2.6.5版本即可，Releases版本：ShadowsocksX-2.6.5<a href=\"https://github.com/RobertYan/ShadowsocksX/releases\" target=\"_blank\" rel=\"external\">https://github.com/RobertYan/ShadowsocksX/releases</a></p>\n<p>方法B：<br>如果不信任其他人修改的版本，你可以使用这个脚本更新PAC<a href=\"https://gist.github.com/VincentSit/b5b112d273513f153caf23a9da112b3a\" target=\"_blank\" rel=\"external\">https://gist.github.com/VincentSit/b5b112d273513f153caf23a9da112b3a</a><br>测试 PAC 是否生效，选择自动模式代理，再次打开Google，如果可以打开，说明配置成功。</p>\n<h5 id=\"配置Shadowdsocks服务器\"><a href=\"#配置Shadowdsocks服务器\" class=\"headerlink\" title=\"配置Shadowdsocks服务器\"></a>配置Shadowdsocks服务器</h5><p>这里只介绍，购买VPS服务器，来搭建Shadowdsocks服务端。不讨论购买现成的帐号。</p>\n<h6 id=\"服务器选择一：搬瓦工bandwagonhost\"><a href=\"#服务器选择一：搬瓦工bandwagonhost\" class=\"headerlink\" title=\"服务器选择一：搬瓦工bandwagonhost\"></a>服务器选择一：搬瓦工bandwagonhost</h6><p>关键字：价格低、一键配置、支付宝<br>价格：$2.99/月，也会有$3.99一年的特价机器,。</p>\n<p>服务器购买注意：买价格最便宜的就可以了，优先：洛杉矶和佛罗里达（也可以随时切换）,电信用户不支持搬瓦工,如果是电信不用考虑了</p>\n<h6 id=\"服务器选择二：Vultr\"><a href=\"#服务器选择二：Vultr\" class=\"headerlink\" title=\"服务器选择二：Vultr\"></a>服务器选择二：Vultr</h6><p>关键字：配置高，可做服务器、速度快</p>\n<p>价格：$5/月</p>\n<p>服务器购买注意：必须选择日本VPS！！</p>\n<p>注意：由于Vultr没有一键配置选项，所以需要手动配置，但是网上已经有人给出一键安装的脚本：Shadowsocks Python版一键安装脚本</p>\n<h6 id=\"服务器选择三：Linode\"><a href=\"#服务器选择三：Linode\" class=\"headerlink\" title=\"服务器选择三：Linode\"></a>服务器选择三：Linode</h6><p>关键字：本人使用,配置高，可做服务器、速度快</p>\n<p>价格：$5/月</p>\n<p>服务器购买注意：都说Linode日本服务器最快,但是Linode老机房的机器已经没有了,我用的是东京2号机房5美元版,实际体验速度并不是特别快,其他机房有待亲测.</p>\n<p>注意：由于Vultr没有一键配置选项，所以需要手动配置，但是网上已经有人给出一键安装的脚本：Shadowsocks Python版一键安装脚本</p>\n<h5 id=\"总结与注意\"><a href=\"#总结与注意\" class=\"headerlink\" title=\"总结与注意\"></a>总结与注意</h5><p>要想简单便宜，可以选择搬瓦工，但我自己贴身体会来讲，虽然刷网页虽然够了，但是看视频下载文件，还是有些慢，这个时候你可以选择Vultr,和Linode,当然了,我自己用过最爽的还是阿里云的香港vps.</p>\n<h4 id=\"Shadowdsocks配合其他软件使用\"><a href=\"#Shadowdsocks配合其他软件使用\" class=\"headerlink\" title=\"Shadowdsocks配合其他软件使用\"></a>Shadowdsocks配合其他软件使用</h4><p>shadowsocks代理属于socks5代理，通俗的理解，socks5只是局部代理，不能像vpn那样把整个电脑都代理。因此，一般情况下只有支持socks5的软件才能使用shadowsocks代理。当然我们也可以借助命令行来实现，具体见下面介绍：</p>\n<h5 id=\"终端走代理的方法\"><a href=\"#终端走代理的方法\" class=\"headerlink\" title=\"终端走代理的方法\"></a>终端走代理的方法</h5><h6 id=\"在终端下使用\"><a href=\"#在终端下使用\" class=\"headerlink\" title=\"在终端下使用\"></a>在终端下使用</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ export ALL_PROXY=socks5://127.0.0.1:1080</div></pre></td></tr></table></figure>\n<h6 id=\"清除代理\"><a href=\"#清除代理\" class=\"headerlink\" title=\"清除代理\"></a>清除代理</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ unset ALL_PROXY</div></pre></td></tr></table></figure>\n<p>为了测试是否成功可以使用以下命令查看IP<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i http://ip.cn</div></pre></td></tr></table></figure></p>\n<p>以上命令只对本窗口生效，为了方便呢，可以在~/.bash_profile中加上这个。（如果没有bash_profile文件自行创建）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">function setproxy() &#123;</div><div class=\"line\"># export &#123;HTTP,HTTPS,FTP&#125;_PROXY=&quot;http://127.0.0.1:3128&quot; 也可以设置http代理</div><div class=\"line\">export ALL_PROXY=socks5://127.0.0.1:1080</div><div class=\"line\">&#125;</div><div class=\"line\">function unsetproxy() &#123;</div><div class=\"line\"># unset &#123;HTTP,HTTPS,FTP&#125;_PROXY</div><div class=\"line\">unset ALL_PROXY</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>需要使用代理的时候setproxy，不用了就unsetproxy</p>\n<p>就可以很方便的在shell环境下切换设置代理了。</p>\n<h6 id=\"路由器上使用Shadowdsocks配置局域网\"><a href=\"#路由器上使用Shadowdsocks配置局域网\" class=\"headerlink\" title=\"路由器上使用Shadowdsocks配置局域网\"></a>路由器上使用Shadowdsocks配置局域网</h6><p>每个路由器都不太一样，自行谷歌吧。</p>\n<h4 id=\"Shadowdsocks-进阶\"><a href=\"#Shadowdsocks-进阶\" class=\"headerlink\" title=\"Shadowdsocks 进阶\"></a>Shadowdsocks 进阶</h4><h5 id=\"Shadowdsocks加速的几种方案\"><a href=\"#Shadowdsocks加速的几种方案\" class=\"headerlink\" title=\"Shadowdsocks加速的几种方案\"></a>Shadowdsocks加速的几种方案</h5><p>方案一：国内服务器安装Haproxy代理Shadowsocks实现加速</p>\n<p>方案二：使用锐速加速</p>\n<p>方案三：FilnalSpeed加速方案</p>\n<p>锐速的使用可以看我的博客</p>\n<h3 id=\"Linux系统使用SS自动脚本搭建服务器\"><a href=\"#Linux系统使用SS自动脚本搭建服务器\" class=\"headerlink\" title=\"Linux系统使用SS自动脚本搭建服务器\"></a>Linux系统使用SS自动脚本搭建服务器</h3><h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4><ol>\n<li>一键安装 Shadowsocks-Python， ShadowsocksR， Shadowsocks-Go， Shadowsocks-libev 版（四选一）服务端；</li>\n<li>各版本的启动脚本及配置文件名不再重合；</li>\n<li>每次运行可安装一种版本；</li>\n<li>支持以多次运行来安装多个版本，且各个版本可以共存（注意端口号需设成不同）；</li>\n<li>若已安装多个版本，则卸载时也需多次运行（每次卸载一种）；</li>\n<li>Shadowsocks-Python 和 ShadowsocksR 安装后不可同时启动（因为本质上都属 Python 版）。</li>\n</ol>\n<h4 id=\"默认配置\"><a href=\"#默认配置\" class=\"headerlink\" title=\"默认配置\"></a>默认配置</h4><ul>\n<li>服务器端口：自己设定（如不设定，默认为 8989）</li>\n<li>密码：自己设定（如不设定，默认为 teddysun.com）</li>\n<li>加密方式：自己设定（如不设定，Python 和 libev 版默认为 aes-256-gcm，R 和 Go 版默认为 aes-256-cfb）</li>\n<li>协议（protocol）：自己设定（如不设定，默认为 origin）（仅限 ShadowsocksR 版）</li>\n<li>混淆（obfs）：自己设定（如不设定，默认为 plain）（仅限 ShadowsocksR 版）</li>\n<li>备注：脚本默认创建单用户配置文件，如需配置多用户，请手动修改相应的配置文件后重启即可。<h4 id=\"客户端下载\"><a href=\"#客户端下载\" class=\"headerlink\" title=\"客户端下载\"></a>客户端下载</h4></li>\n<li><p>常规版 Windows 客户端<br><a href=\"https://github.com/shadowsocks/shadowsocks-windows/releases\" target=\"_blank\" rel=\"external\">https://github.com/shadowsocks/shadowsocks-windows/releases</a></p>\n</li>\n<li><p>ShadowsocksR 版 Windows 客户端<br><a href=\"https://github.com/shadowsocksr/shadowsocksr-csharp/releases\" target=\"_blank\" rel=\"external\">https://github.com/shadowsocksr/shadowsocksr-csharp/releases</a></p>\n</li>\n</ul>\n<h4 id=\"安装方法\"><a href=\"#安装方法\" class=\"headerlink\" title=\"安装方法\"></a>安装方法</h4><p>ssh登录后,使用以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh</div><div class=\"line\">$ chmod +x shadowsocks-all.sh</div><div class=\"line\">$ ./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</div></pre></td></tr></table></figure></p>\n<p>安装成功完成后,脚本提示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Congratulations, your_shadowsocks_version install completed!</div><div class=\"line\">Your Server IP        :your_server_ip</div><div class=\"line\">Your Server Port      :your_server_port</div><div class=\"line\">Your Password         :your_password</div><div class=\"line\">Your Encryption Method:your_encryption_method</div><div class=\"line\">Welcome to visit:https://teddysun.com/486.html</div><div class=\"line\">Enjoy it!</div></pre></td></tr></table></figure></p>\n<h4 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h4><p>若已安装多个版本，则卸载时也需多次运行（每次卸载一种）</p>\n<p>使用root用户登录，运行以下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./shadowsocks-all.sh uninstall</div></pre></td></tr></table></figure></p>\n<h4 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。</div><div class=\"line\">Shadowsocks-Python 版：</div><div class=\"line\">/etc/init.d/shadowsocks-python start | stop | restart | status</div><div class=\"line\">ShadowsocksR 版：</div><div class=\"line\">/etc/init.d/shadowsocks-r start | stop | restart | status</div><div class=\"line\">Shadowsocks-Go 版：</div><div class=\"line\">/etc/init.d/shadowsocks-go start | stop | restart | status</div><div class=\"line\">Shadowsocks-libev 版：</div><div class=\"line\">/etc/init.d/shadowsocks-libev start | stop | restart | status</div></pre></td></tr></table></figure>\n<h4 id=\"各版本默认配置文件\"><a href=\"#各版本默认配置文件\" class=\"headerlink\" title=\"各版本默认配置文件\"></a>各版本默认配置文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Shadowsocks-Python 版：</div><div class=\"line\">/etc/shadowsocks-python/config.json</div><div class=\"line\">ShadowsocksR 版：</div><div class=\"line\">/etc/shadowsocks-r/config.json</div><div class=\"line\">Shadowsocks-Go 版：</div><div class=\"line\">/etc/shadowsocks-go/config.json</div><div class=\"line\">Shadowsocks-libev 版：</div><div class=\"line\">/etc/shadowsocks-libev/config.json</div></pre></td></tr></table></figure>\n<h4 id=\"单用户配置文件示例\"><a href=\"#单用户配置文件示例\" class=\"headerlink\" title=\"单用户配置文件示例\"></a>单用户配置文件示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">&quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class=\"line\">&quot;server_port&quot;:your_server_port,</div><div class=\"line\">&quot;local_address&quot;:&quot;127.0.0.1&quot;,</div><div class=\"line\">&quot;local_port&quot;:1080,</div><div class=\"line\">&quot;password&quot;:&quot;your_password&quot;,</div><div class=\"line\">&quot;timeout&quot;:300,</div><div class=\"line\">&quot;method&quot;:&quot;your_encryption_method&quot;,</div><div class=\"line\">&quot;fast_open&quot;: false</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"多用户多端口配置文件示例\"><a href=\"#多用户多端口配置文件示例\" class=\"headerlink\" title=\"多用户多端口配置文件示例\"></a>多用户多端口配置文件示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">&quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class=\"line\">&quot;local_address&quot;:&quot;127.0.0.1&quot;,</div><div class=\"line\">&quot;local_port&quot;:1080,</div><div class=\"line\">&quot;port_password&quot;:&#123;</div><div class=\"line\">&quot;8989&quot;:&quot;password0&quot;,</div><div class=\"line\">&quot;9001&quot;:&quot;password1&quot;,</div><div class=\"line\">&quot;9002&quot;:&quot;password2&quot;,</div><div class=\"line\">&quot;9003&quot;:&quot;password3&quot;,</div><div class=\"line\">&quot;9004&quot;:&quot;password4&quot;</div><div class=\"line\">&#125;,</div><div class=\"line\">&quot;timeout&quot;:300,</div><div class=\"line\">&quot;method&quot;:&quot;your_encryption_method&quot;,</div><div class=\"line\">&quot;fast_open&quot;: false</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj8yck60i00000dxjvylq9gcp","tag_id":"cj8yck60t00020dxji0hk0dab","_id":"cj8yck61000070dxjh17rgn2l"},{"post_id":"cj8yck60o00010dxjc1sa1iyv","tag_id":"cj8yck61000060dxjw3p1th1q","_id":"cj8yck614000a0dxjthyx7lfq"},{"post_id":"cj8yck60w00030dxj4ialiom7","tag_id":"cj8yck61400090dxjaqnntetz","_id":"cj8yck615000c0dxj9nwlmmum"},{"post_id":"cj8yck60y00040dxjj2e8espg","tag_id":"cj8yck615000b0dxjxnth951c","_id":"cj8yck61a000e0dxj6pjzeuvb"},{"post_id":"cj8yck60z00050dxjl0holrmr","tag_id":"cj8yck61400090dxjaqnntetz","_id":"cj8yck61b000g0dxj4oqb02oy"},{"post_id":"cj8yck61100080dxjxz0o462k","tag_id":"cj8yck61400090dxjaqnntetz","_id":"cj8yck61c000h0dxjhm1h85p0"}],"Tag":[{"name":"git","_id":"cj8yck60t00020dxji0hk0dab"},{"name":"hexo静态博客","_id":"cj8yck61000060dxjw3p1th1q"},{"name":"ss,vps","_id":"cj8yck61400090dxjaqnntetz"},{"name":"iOS","_id":"cj8yck615000b0dxjxnth951c"}]}}